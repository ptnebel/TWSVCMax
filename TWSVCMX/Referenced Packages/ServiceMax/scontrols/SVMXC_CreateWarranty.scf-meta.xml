<?xml version="1.0" encoding="UTF-8"?>
<Scontrol xmlns="http://soap.sforce.com/2006/04/metadata">
    <contentSource>HTML</contentSource>
    <description>Select warranty template and create warranty for an IB</description>
    <encodingKey>UTF-8</encodingKey>
    <fileContent>var InstProdId = "";
var NewInstProdId = "";
var ErrMsg = "";
var retURL = "";
var MsgList = new Array();
var ParentIbId = "";
var TopIbId = "";
var SiteId = "";
var ContactId = "";
var DistContactId = "";
var ibrowcnt = 0;
var CloneMode = false;

// Main entry point for IB called on page load
// Setup the IB screen for new/edit record
function SVMXC_IB_SetupIBScreen(ibid, uid)
{
    SVMXC_GetReturnURL();

    CloneMode = false;
    var url = parent.window.location.toString();
    if (url.indexOf("clone=1") >= 0)
	CloneMode = true;

    SVMXC_InitMessageList("IPRDSC1");

    SVMXC_IB_SetLabelsAndLists();

    InstProdId = ibid;
    UserId = uid;

    if (!InstProdId)		// New IB mode
	{
	document.getElementById("NewTitle").style.display = 'block';
	document.getElementById("EditTitle").style.display = 'none';
	}
    else		// Edit existing IB record mode
	{
	SVMXC_IB_PopulateIBRecord(InstProdId);
	document.getElementById("NewTitle").style.display = 'none';
	document.getElementById("EditTitle").style.display = 'block';
	}

    SVMXC_IB_SetIBLookupTypes();
}
/*================================================================================================*/
// Set the field labels from IB object definition by matching label's name attribute to SFDC field name
// Set the picklist values and choose default value if available
function SVMXC_IB_SetLabelsAndLists()
{
    var result = sforce.connection.describeSObject("SVMXC__Installed_Product__c");
    for (var i = 0; i < result.fields.length; i++)
	{
	var field = result.fields[i];
	if (field.type == "picklist")
	    {
	    var selectctl;
	    var selects = document.getElementsByTagName('select');
	    for (var k = 0; k < selects.length; k++)
	        {
		if (selects[k].name == field.name)
		    selectctl = selects[k];
		}
	    if (selectctl)
		{
		var defindex = -1;
		for (var m = 0; m < field.picklistValues.length; m++)
		    {
		    var plv = field.picklistValues[m];
		    selectctl.options[m] = new Option(plv.label, plv.value);
		    if (plv.defaultValue == "true")
			defindex = m;
		    }
		selectctl.selectedIndex = defindex;
		}
	    }
	}
    var labels = document.getElementsByTagName('label');
    for (var x = 0; x < labels.length; x++)
	{
	var f = labels[x];
	if (MsgList[f.name])
	    f.innerText = MsgList[f.name];
	}
    var buttons = document.getElementsByTagName('button');
    for (var y = 0; y < buttons.length; y++)
	{
	var f = buttons[y];
	if (MsgList[f.name])
	    f.value = MsgList[f.name];
	}
    var cbs = document.getElementsByTagName('checkbox');
    for (var z = 0; z < cbs.length; z++)
	{
	var f = buttons[z];
	if (MsgList[f.name])
	    f.value = MsgList[f.name];
	}
    return true;
}
/*================================================================================================*/
// We use SFDC's standard lookup popup which requires the 3-digit object code (prefix)
// The object prefix may wary in each SFDC org - it is populated in hidden fields on the form
// for the lookup to work properly
function SVMXC_IB_SetIBLookupTypes()
{
    var accobj = sforce.connection.describeSObject("Account");
    var contobj = sforce.connection.describeSObject("Contact");
    var prodobj = sforce.connection.describeSObject("Product2");
    var ibobj = sforce.connection.describeSObject("SVMXC__Installed_Product__c");
    var siteobj = sforce.connection.describeSObject("SVMXC__Site__c");

    document.getElementById("product1_lktp").value = prodobj.keyPrefix;
    document.getElementById("parent_serial_lktp").value = ibobj.keyPrefix;
    document.getElementById("top_serial_lktp").value = ibobj.keyPrefix;
    document.getElementById("company_lktp").value = accobj.keyPrefix;
    document.getElementById("dist_company_lktp").value = accobj.keyPrefix;
    document.getElementById("contact_lktp").value = contobj.keyPrefix;
    document.getElementById("dist_contact_lktp").value = contobj.keyPrefix;
    document.getElementById("site_lktp").value = siteobj.keyPrefix;
}
/*================================================================================================*/
// Retrieve the existing IB record and populate fields on the form
function SVMXC_IB_PopulateIBRecord()
{
    var soql1 = "SELECT SVMXC__Product__c, SVMXC__Product__r.Name, SVMXC__Serial_Lot_Number__c, " +
		"SVMXC__Parent__c, SVMXC__Parent__r.SVMXC__Product__r.Name, SVMXC__Parent__r.SVMXC__Serial_Lot_Number__c, " +
		"SVMXC__Top_Level__c, SVMXC__Top_Level__r.SVMXC__Product__r.Name, SVMXC__Top_Level__r.SVMXC__Serial_Lot_Number__c, " +
		"SVMXC__Asset_Tag__c, SVMXC__Company__c, SVMXC__Company__r.Name, " +
		"SVMXC__Contact__c, SVMXC__Contact__r.Name, SVMXC__Alternate_Company__c, " +
		"SVMXC__Distributor_Company__c, SVMXC__Distributor_Company__r.Name, " +
		"SVMXC__Distributor_Contact__c, SVMXC__Distributor_Contact__r.Name, " +
		"SVMXC__Sales_Order_Number__c, SVMXC__Status__c, SVMXC__Date_Shipped__c, SVMXC__Last_Date_Shipped__c, " +
		"SVMXC__Date_Ordered__c, SVMXC__Date_Installed__c, SVMXC__Site__c, SVMXC__Site__r.Name, " +
		"SVMXC__Street__c, SVMXC__City__c, SVMXC__State__c, SVMXC__Zip__c, SVMXC__Country__c, SVMXC__Installation_Notes__c " +
		"FROM SVMXC__Installed_Product__c WHERE Id = '" + InstProdId + "'";
    try {
	var qr1 = sforce.connection.query(soql1);
	}
    catch (error) {
	alert(error);
	return;
	}
    var ibrec = qr1.getArray("records")[0];

    SVMXC_AssignFormValue("product1_lkid", ibrec.SVMXC__Product__c);
    if (ibrec.SVMXC__Product__r)
	{
	SVMXC_AssignFormValue("product1_lkold", ibrec.SVMXC__Product__r.Name);
	SVMXC_AssignFormValue("product1", ibrec.SVMXC__Product__r.Name);
	}
    SVMXC_AssignFormValue("serial1", ibrec.SVMXC__Serial_Lot_Number__c);

    if (ibrec.SVMXC__Parent__r && ibrec.SVMXC__Parent__r.SVMXC__Product__r)
	SVMXC_AssignFormValue("parent_product", ibrec.SVMXC__Parent__r.SVMXC__Product__r.Name);

    SVMXC_AssignFormValue("parent_serial_lkid", ibrec.SVMXC__Parent__c);
    if (ibrec.SVMXC__Parent__r)
	{
	SVMXC_AssignFormValue("parent_serial_lkold", ibrec.SVMXC__Parent__r.SVMXC__Serial_Lot_Number__c);
	SVMXC_AssignFormValue("parent_serial", ibrec.SVMXC__Parent__r.SVMXC__Serial_Lot_Number__c);
	}

    if (ibrec.SVMXC__Top_Level__r && ibrec.SVMXC__Top_Level__r.SVMXC__Product__r)
	SVMXC_AssignFormValue("top_product", ibrec.SVMXC__Top_Level__r.SVMXC__Product__r.Name);

    SVMXC_AssignFormValue("top_serial_lkid", ibrec.SVMXC__Top_Level__c);
    if (ibrec.SVMXC__Top_Level__r)
	{
	SVMXC_AssignFormValue("top_serial_lkold", ibrec.SVMXC__Top_Level__r.SVMXC__Serial_Lot_Number__c);
	SVMXC_AssignFormValue("top_serial", ibrec.SVMXC__Top_Level__r.SVMXC__Serial_Lot_Number__c);
	}

    SVMXC_AssignFormValue("asset_tag", ibrec.SVMXC__Asset_Tag__c);
    SVMXC_AssignFormValue("company_lkid", ibrec.SVMXC__Company__c);
    if (ibrec.SVMXC__Company__r)
	{
	SVMXC_AssignFormValue("company_lkold", ibrec.SVMXC__Company__r.Name);
	SVMXC_AssignFormValue("company", ibrec.SVMXC__Company__r.Name);
	}

    SVMXC_AssignFormValue("contact_lkid", ibrec.SVMXC__Contact__c);
    if (ibrec.SVMXC__Contact__r)
	{
	SVMXC_AssignFormValue("contact_lkold", ibrec.SVMXC__Contact__r.Name);
	SVMXC_AssignFormValue("contact", ibrec.SVMXC__Contact__r.Name);
	}
    SVMXC_AssignFormValue("alt_company", ibrec.SVMXC__Alternate_Company__c);

    SVMXC_AssignFormValue("dist_company_lkid", ibrec.SVMXC__Distributor_Company__c);
    if (ibrec.SVMXC__Distributor_Company__r)
	{
	SVMXC_AssignFormValue("dist_company_lkold", ibrec.SVMXC__Distributor_Company__r.Name);
	SVMXC_AssignFormValue("dist_company", ibrec.SVMXC__Distributor_Company__r.Name);
	}

    SVMXC_AssignFormValue("dist_contact_lkid", ibrec.SVMXC__Distributor_Contact__c);
    if (ibrec.SVMXC__Distributor_Contact__r)
	{
	SVMXC_AssignFormValue("dist_contact_lkold", ibrec.SVMXC__Distributor_Contact__r.Name);
	SVMXC_AssignFormValue("dist_contact", ibrec.SVMXC__Distributor_Contact__r.Name);
	}
    SVMXC_AssignFormValue("sales_order", ibrec.SVMXC__Sales_Order_Number__c);
    SVMXC_AssignFormValue("status", ibrec.SVMXC__Status__c);
    SVMXC_AssignFormValue("site_lkid", ibrec.SVMXC__Site__c);
    if (ibrec.SVMXC__Site__r)
	{
	SVMXC_AssignFormValue("site_lkold", ibrec.SVMXC__Site__r.Name);
	SVMXC_AssignFormValue("site", ibrec.SVMXC__Site__r.Name);
	}
    SVMXC_AssignFormValue("street", ibrec.SVMXC__Street__c);
    SVMXC_AssignFormValue("city", ibrec.SVMXC__City__c);
    SVMXC_AssignFormValue("state", ibrec.SVMXC__State__c);
    SVMXC_AssignFormValue("zip", ibrec.SVMXC__Zip__c);

    if (ibrec.SVMXC__Country__c)
	SVMXC_AssignFormValue("country", ibrec.SVMXC__Country__c);
    else
	SVMXC_AssignFormValue("country", "--None--");

    SVMXC_AssignFormValue("inst_notes", ibrec.SVMXC__Installation_Notes__c);

    SVMXC_AssignFormDate("date_ordered", ibrec.SVMXC__Date_Ordered__c);
    SVMXC_AssignFormDate("date_shipped", ibrec.SVMXC__Date_Shipped__c);
    SVMXC_AssignFormDate("last_date_shipped", ibrec.SVMXC__Last_Date_Shipped__c);
    SVMXC_AssignFormDate("date_installed", ibrec.SVMXC__Date_Installed__c);

    ParentIbId = ibrec.SVMXC__Parent__c;
    TopIbId = ibrec.SVMXC__Top_Level__c;
    SiteId = ibrec.SVMXC__Site__c;
    ContactId = ibrec.SVMXC__Contact__c;
    DistContactId = ibrec.SVMXC__Distributor_Contact__c;
}
/*================================================================================================*/
// Validate the IB form and save it
function SVMXC_IB_ValidateAndSaveIB()
{
    ErrMsg = "";
    var rec_valid = true;

    if (SVMXC_IsFieldBlank("product1_lkid"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG003");
	}
    else
	{
	var soql1 = "SELECT SVMXC__Tracking__c FROM Product2 WHERE Id = '" + document.getElementById("product1_lkid").value + "'";
	var qr1 = sforce.connection.query(soql1);
	var rec1 = qr1.getArray("records")[0];
	if ((rec1.SVMXC__Tracking__c == "Serialized" || rec1.SVMXC__Tracking__c == "Lot/Batch Tracked") && SVMXC_IsFieldBlank("serial1"))
	    {
	    rec_valid = false;
	    if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	    ErrMsg += SVMXC_GetMessage("MSG004");
	    }
	}

    if (!SVMXC_IsValidLookup("parent_serial"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG005");
	}

    if (!SVMXC_IsValidLookup("top_serial"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG006");
	}

    if (SVMXC_IsFieldBlank("company_lkid"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG007");
	}

    if (SVMXC_IsFieldBlank("status"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG008");
	}

    if (!SVMXC_IsValidLookup("contact"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG009");
	}

    if (!SVMXC_IsValidLookup("dist_company"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG010");
	}

    if (!SVMXC_IsValidLookup("dist_contact"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG011");
	}

    if (!SVMXC_IsValidLookup("site"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG012");
	}

    if (!SVMXC_IsFieldBlank("date_ordered") && !SVMXC_IsValidDate("date_ordered"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG013");
	}

    if (!SVMXC_IsFieldBlank("date_shipped") && !SVMXC_IsValidDate("date_shipped"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG014");
	}

    if (!SVMXC_IsFieldBlank("last_date_shipped") && !SVMXC_IsValidDate("last_date_shipped"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG015");
	}

    if (!SVMXC_IsFieldBlank("date_installed") && !SVMXC_IsValidDate("date_installed"))
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG016");
	}

    var strInstDate = document.getElementById("date_installed").value;
    var strOrderDate = document.getElementById("date_ordered").value;
    var strShipDate = document.getElementById("date_shipped").value;
    if (strInstDate.length > 0)
	var dtInstDate = SVMXC_GetDateFromFormat(strInstDate, parent.UserContext.dateFormat);

    if (strOrderDate.length > 0)
	var dtOrderDate = SVMXC_GetDateFromFormat(strOrderDate, parent.UserContext.dateFormat);

    if (strShipDate.length > 0)
	var dtShipDate = SVMXC_GetDateFromFormat(strShipDate, parent.UserContext.dateFormat);

    if (strOrderDate.length > 0 && strShipDate.length > 0 && dtShipDate < dtOrderDate)
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG017");
	}

    if (strOrderDate.length > 0 && strInstDate.length > 0 && dtInstDate < dtOrderDate)
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG018");
	}

    if (strShipDate.length > 0 && strInstDate.length > 0 && dtInstDate < dtShipDate)
    	{
	rec_valid = false;
	if (ErrMsg.length > 0) { ErrMsg += "<br>"; }
	ErrMsg += SVMXC_GetMessage("MSG019");
	}

    if (!rec_valid) 
	{
	document.getElementById("ErrMsg").style.border = "#FF0000 2px solid";
	document.getElementById("ErrMsg").innerHTML = "<strong>Error: </strong><br>" + ErrMsg;
	document.getElementById("ErrMsg").style.display = 'block';
	return false;
	}
    document.getElementById("ErrMsg").style.border = "0";
    document.getElementById("ErrMsg").innerHTML = "";
    document.getElementById("ErrMsg").style.display = 'none';
    if (SVMXC_IB_SaveIB())
	{
	if (NewInstProdId)
	    parent.window.location = parent.window.location.protocol + "//" + parent.window.location.host + "/" + NewInstProdId;
	else
	    parent.window.location = parent.window.location.protocol + "//" + parent.window.location.host + retURL;
	return true;
	}
}
/*================================================================================================*/
function SVMXC_AssignToSFDC(fname)
{
    var fval = document.getElementById(fname).value;
    if (fval && fval.length > 0)
    	return fval;
    else
    	return null;
}
/*================================================================================================*/
// Save (Create or update) the IB record
function SVMXC_IB_SaveIB()
{
    var ib = new sforce.SObject("SVMXC__Installed_Product__c");
    sn = document.getElementById("serial1").value;
    if (sn.length > 0)
	ib.Name = document.getElementById("serial1").value;
    else
	ib.Name = document.getElementById("product1").value;
    ib.SVMXC__Product__c = SVMXC_AssignToSFDC("product1_lkid");
    ib.SVMXC__Product__c = SVMXC_AssignToSFDC("product1_lkid");
    ib.SVMXC__Serial_Lot_Number__c = document.getElementById("serial1").value;
    ib.SVMXC__Parent__c = SVMXC_AssignToSFDC("parent_serial_lkid");
    ib.SVMXC__Top_Level__c = SVMXC_AssignToSFDC("top_serial_lkid");
    ib.SVMXC__Asset_Tag__c = document.getElementById("asset_tag").value;
    ib.SVMXC__Company__c = SVMXC_AssignToSFDC("company_lkid");
    ib.SVMXC__Contact__c = SVMXC_AssignToSFDC("contact_lkid");
    ib.SVMXC__Alternate_Company__c = document.getElementById("alt_company").value;
    ib.SVMXC__Distributor_Company__c = SVMXC_AssignToSFDC("dist_company_lkid");
    ib.SVMXC__Distributor_Contact__c = SVMXC_AssignToSFDC("dist_contact_lkid");
    ib.SVMXC__Sales_Order_Number__c = document.getElementById("sales_order").value;
    ib.SVMXC__Status__c = document.getElementById("status").value;
    ib.SVMXC__Date_Shipped__c = SVMXC_ConvertToSFDCDateFormat("date_shipped");
    ib.SVMXC__Last_Date_Shipped__c = SVMXC_ConvertToSFDCDateFormat("last_date_shipped");
    ib.SVMXC__Date_Ordered__c = SVMXC_ConvertToSFDCDateFormat("date_ordered");
    ib.SVMXC__Date_Installed__c = SVMXC_ConvertToSFDCDateFormat("date_installed");
    ib.SVMXC__Site__c = SVMXC_AssignToSFDC("site_lkid");
    ib.SVMXC__Street__c = document.getElementById("street").value;
    ib.SVMXC__City__c = document.getElementById("city").value;
    ib.SVMXC__State__c = document.getElementById("state").value;
    ib.SVMXC__Zip__c = document.getElementById("zip").value;
    if (document.getElementById("country").value == "--None--")
	ib.SVMXC__Country__c = null;
    else
	ib.SVMXC__Country__c = document.getElementById("country").value;
    ib.SVMXC__Installation_Notes__c = document.getElementById("inst_notes").value;
    try {
	if (InstProdId && CloneMode == false)
	    {
	    ib.Id = InstProdId;
	    var ret = sforce.connection.update([ib]);
	    }
	else
	    {
	    var ret = sforce.connection.create([ib]);
	    NewInstProdId = ret[0].id;
	    //// Moved to Apex 3Oct08: if (!SVMXC_IB_CreateWarrantyForProds(ret[0].id, ib))
		////	return false;
	    }
	}
    catch (e) {
	alert(SVMXC_GetMessage("MSG001") + "\n" + e)
	return false;
    	}
    return true;
}
/*================================================================================================*/
// Create warranty for the newly created IB record
function SVMXC_IB_CreateWarrantyForProds(newIbId, ibrec)
{
    var prodid = document.getElementById("product1_lkid").value;

    var soql1 = "SELECT SVMXC__Inherit_Parent_Warranty__c, SVMXC__Product_Line__c, Family FROM Product2 WHERE Id = '" + prodid + "'";
    var qr1 = sforce.connection.query(soql1);
    var rec1 = qr1.getArray("records");

    if (rec1[0].SVMXC__Inherit_Parent_Warranty__c == "true")
    	{
	if (!SVMXC_IB_CopyParentWarranty(newIbId, ibrec)) { return false; }
	return true;
	}

    prodfamily = rec1[0].Family;
    prodline = rec1[0].SVMXC__Product_Line__c;

	    // Get all warranty templates linked to the product, product family and product line
    var soql2 = "SELECT SVMXC__Service_Template__c, SVMXC__Service_Template__r.Name, " +
    		"SVMXC__Service_Template__r.SVMXC__All_Products_Covered__c, SVMXC__Service_Template__r.SVMXC__All_Services_Covered__c, " +
    		"SVMXC__Service_Template__r.SVMXC__Coverage_Effective_From__c, SVMXC__Service_Template__r.SVMXC__Duration_of_Time_Coverage__c, " +
		"SVMXC__Service_Template__r.SVMXC__Duration_of_Material_Coverage__c, SVMXC__Service_Template__r.SVMXC__Duration_of_Expenses__c, " +
		"SVMXC__Service_Template__r.SVMXC__Exclusions__c, SVMXC__Service_Template__r.SVMXC__Expenses_Covered__c, " +
		"SVMXC__Service_Template__r.SVMXC__Invoice_Required__c, SVMXC__Service_Template__r.SVMXC__Loaner_Provided__c, " +
		"SVMXC__Service_Template__r.SVMXC__Material_Covered__c, SVMXC__Service_Template__r.SVMXC__Onsite_Repair__c, " +
		"SVMXC__Service_Template__r.SVMXC__RMA_Required__c, SVMXC__Service_Template__r.SVMXC__Shipment_Allowed__c, " +
		"SVMXC__Service_Template__r.SVMXC__Template_Type__c, SVMXC__Service_Template__r.SVMXC__Time_Covered__c, " +
		"SVMXC__Service_Template__r.SVMXC__Transferable__c, SVMXC__Service_Template__r.SVMXC__Unit_of_Time_Material__c, " +
		"SVMXC__Service_Template__r.SVMXC__Unit_of_Time_Expenses__c, SVMXC__Service_Template__r.SVMXC__Unit_of_Time__c, " +
		"SVMXC__Service_Template__r.SVMXC__Walk_in_Allowed__c FROM SVMXC__Service_Template_Products__c " +
		"WHERE SVMXC__Product__c = '" + prodid + "'";

    if (prodfamily && prodfamily.length > 0)
	soql2 += " OR SVMXC__Product_Family__c = '" + prodfamily + "'";
    if (prodline && prodline.length > 0)
	soql2 += " OR SVMXC__Product_Line__c = '" + prodline + "'";

    var qr2 = sforce.connection.query(soql2);
    var wt_recs = new sforce.QueryResultIterator(qr2);
    while(wt_recs.hasNext())
	{
	var wt = wt_recs.next();
	var warr = new sforce.SObject("SVMXC__Warranty__c");
	warr.SVMXC__Installed_Product__c = newIbId;
	warr.SVMXC__Service_Template__c = wt.SVMXC__Service_Template__c;
	warr.SVMXC__All_Products_Covered__c = wt.SVMXC__Service_Template__r.SVMXC__All_Products_Covered__c;
	warr.SVMXC__All_Services_Covered__c = wt.SVMXC__Service_Template__r.SVMXC__All_Services_Covered__c;
	warr.SVMXC__Time_Covered__c = wt.SVMXC__Service_Template__r.SVMXC__Time_Covered__c;
	warr.SVMXC__Transferable__c = wt.SVMXC__Service_Template__r.SVMXC__Transferable__c;
	warr.SVMXC__Walk_in_Allowed__c = wt.SVMXC__Service_Template__r.SVMXC__Walk_in_Allowed__c;
	warr.SVMXC__Expenses_Covered__c = wt.SVMXC__Service_Template__r.SVMXC__Expenses_Covered__c;
	warr.SVMXC__Invoice_Required__c = wt.SVMXC__Service_Template__r.SVMXC__Invoice_Required__c;
	warr.SVMXC__Loaner_Provided__c = wt.SVMXC__Service_Template__r.SVMXC__Loaner_Provided__c;
	warr.SVMXC__Material_Covered__c = wt.SVMXC__Service_Template__r.SVMXC__Material_Covered__c;
	warr.SVMXC__Onsite_Repair__c = wt.SVMXC__Service_Template__r.SVMXC__Onsite_Repair__c;
	warr.SVMXC__RMA_Required__c = wt.SVMXC__Service_Template__r.SVMXC__RMA_Required__c;
	warr.SVMXC__Shipment_Allowed__c = wt.SVMXC__Service_Template__r.SVMXC__Shipment_Allowed__c;
	warr.SVMXC__Exclusions__c = wt.SVMXC__Service_Template__r.SVMXC__Exclusions__c;

	var currdate = new Date();
	if (wt.SVMXC__Service_Template__r.SVMXC__Coverage_Effective_From__c == "Ship Date" && ibrec.SVMXC__Date_Shipped__c && ibrec.SVMXC__Date_Shipped__c.length > 0)
	    warr.SVMXC__Start_Date__c = ibrec.SVMXC__Date_Shipped__c;
	else if (wt.SVMXC__Service_Template__r.SVMXC__Coverage_Effective_From__c == "Install Date" && ibrec.SVMXC__Date_Installed__c && ibrec.SVMXC__Date_Installed__c.length > 0)
	    warr.SVMXC__Start_Date__c = ibrec.SVMXC__Date_Installed__c;
	else
	    warr.SVMXC__Start_Date__c = SVMXC_ConvertDateToSFDC(currdate);

	var dtTimeEnd = SVMXC_CalcWarrEndDate(warr.SVMXC__Start_Date__c,
					wt.SVMXC__Service_Template__r.SVMXC__Duration_of_Time_Coverage__c,
					wt.SVMXC__Service_Template__r.SVMXC__Unit_of_Time__c);
	warr.SVMXC__End_Date_Time_Covered__c = SVMXC_ConvertDateToSFDC(dtTimeEnd);

	var dtPartsEnd = SVMXC_CalcWarrEndDate(warr.SVMXC__Start_Date__c,
					wt.SVMXC__Service_Template__r.SVMXC__Duration_of_Material_Coverage__c,
					wt.SVMXC__Service_Template__r.SVMXC__Unit_of_Time_Material__c);
	warr.SVMXC__End_Date_Material_Covered__c = SVMXC_ConvertDateToSFDC(dtPartsEnd);

	var dtExpEnd = SVMXC_CalcWarrEndDate(warr.SVMXC__Start_Date__c,
					wt.SVMXC__Service_Template__r.SVMXC__Duration_of_Expenses__c,
					wt.SVMXC__Service_Template__r.SVMXC__Unit_of_Time_Expenses__c);
	warr.SVMXC__End_Date_Expenses_Covered__c = SVMXC_ConvertDateToSFDC(dtExpEnd);

	// Overall end date of the warranty is the maximum of time/parts/expenses coverage end dates
	if (dtTimeEnd >= dtPartsEnd && dtTimeEnd >= dtExpEnd)
	    warr.SVMXC__End_Date__c  = SVMXC_ConvertDateToSFDC(dtTimeEnd); 
	else if (dtPartsEnd >= dtTimeEnd && dtPartsEnd>= dtExpEnd)
	    warr.SVMXC__End_Date__c = SVMXC_ConvertDateToSFDC(dtPartsEnd); 
	else if (dtExpEnd >= dtTimeEnd && dtExpEnd>= dtPartsEnd)
	    warr.SVMXC__End_Date__c = SVMXC_ConvertDateToSFDC(dtExpEnd); 

	try {
	    var ret = sforce.connection.create([warr]);
	    }
	catch (e) {
	    alert(SVMXC_GetMessage("MSG001") + "\n" + e)
	    return false;
	    }
	}
    return true;
}
/*================================================================================================*/
// Create warranty for the child from parent's warranty records
function SVMXC_IB_CopyParentWarranty(newIbId, ibrec)
{
    var soql1 = "SELECT SVMXC__All_Products_Covered__c, SVMXC__All_Services_Covered__c, " +
    		"SVMXC__End_Date__c, SVMXC__End_Date_Expenses_Covered__c, " +
		"SVMXC__End_Date_Material_Covered__c, SVMXC__End_Date_Time_Covered__c, " +
		"SVMXC__Exclusions__c, SVMXC__Expenses_Covered__c, SVMXC__Invoice_Required__c, " +
		"SVMXC__Loaner_Provided__c, SVMXC__Material_Covered__c, SVMXC__Onsite_Repair__c, " +
		"SVMXC__RMA_Required__c, SVMXC__Service_Template__c, SVMXC__Shipment_Allowed__c, " +
		"SVMXC__Start_Date__c, SVMXC__Time_Covered__c, SVMXC__Transferable__c, " +
		"SVMXC__Walk_in_Allowed__c FROM SVMXC__Warranty__c WHERE SVMXC__Installed_Product__c = '" + ibrec.SVMXC__Parent__c + "'";
    var qr1 = sforce.connection.query(soql1);
    var warr_recs = new sforce.QueryResultIterator(qr1);
    while(warr_recs.hasNext())
	{
	var wrec = warr_recs.next();
	var warr = new sforce.SObject("SVMXC__Warranty__c");
	warr.SVMXC__Installed_Product__c = newIbId;
	warr.SVMXC__All_Products_Covered__c = wrec.SVMXC__All_Products_Covered__c;
	warr.SVMXC__All_Services_Covered__c = wrec.SVMXC__All_Services_Covered__c;
	warr.SVMXC__End_Date__c = wrec.SVMXC__End_Date__c;
	warr.SVMXC__End_Date_Expenses_Covered__c = wrec.SVMXC__End_Date_Expenses_Covered__c;
	warr.SVMXC__End_Date_Material_Covered__c = wrec.SVMXC__End_Date_Material_Covered__c;
	warr.SVMXC__End_Date_Time_Covered__c = wrec.SVMXC__End_Date_Time_Covered__c;
	warr.SVMXC__Exclusions__c = wrec.SVMXC__Exclusions__c;
	warr.SVMXC__Expenses_Covered__c = wrec.SVMXC__Expenses_Covered__c;
	warr.SVMXC__Invoice_Required__c = wrec.SVMXC__Invoice_Required__c;
	warr.SVMXC__Loaner_Provided__c = wrec.SVMXC__Loaner_Provided__c;
	warr.SVMXC__Material_Covered__c = wrec.SVMXC__Material_Covered__c;
	warr.SVMXC__Onsite_Repair__c = wrec.SVMXC__Onsite_Repair__c;
	warr.SVMXC__RMA_Required__c = wrec.SVMXC__RMA_Required__c;
	warr.SVMXC__Service_Template__c = wrec.SVMXC__Service_Template__c;
	warr.SVMXC__Shipment_Allowed__c = wrec.SVMXC__Shipment_Allowed__c;
	warr.SVMXC__Start_Date__c = wrec.SVMXC__Start_Date__c;
	warr.SVMXC__Time_Covered__c = wrec.SVMXC__Time_Covered__c;
	warr.SVMXC__Transferable__c = wrec.SVMXC__Transferable__c;
	warr.SVMXC__Walk_in_Allowed__c = wrec.SVMXC__Walk_in_Allowed__c;
	try {
	    var ret = sforce.connection.create([warr]);
	    }
	catch (e)
	    {
	    alert(SVMXC_GetMessage("MSG001") + "\n" + e)
	    return false;
	    }
	}
    return true;
}
/*================================================================================================*/
function SVMXC_CalcWarrEndDate(strStartDate, Units, UoT)
{
    if (!Units || !UoT || Units.length <= 0 || UoT.length <= 0) { return new Date(); }

    var mspd = 1000 * 60 * 60 * 24;
    var arrStartDate = strStartDate.split('-', 3);
    var dateStart = new Date(arrStartDate[0], arrStartDate[1] - 1, arrStartDate[2]);
    var nYear = dateStart.getFullYear();
    var nMonth = dateStart.getMonth();
    var dateEnd;
    var nDuration = parseFloat(Units);
    switch (UoT)
	{
	case "Days":
	    dateEnd = new Date(dateStart.getTime() + (nDuration * mspd));
	    break;
	case "Weeks":
	    dateEnd = new Date(dateStart.getTime() + (nDuration * mspd * 7));
	    break;
	case "Months":
	    nMonth += nDuration;
	    dateEnd = new Date(nYear, nMonth, dateStart.getDate()-1);
	    break;
	case "Years":
	    nYear += nDuration;
	    dateEnd = new Date(nYear, nMonth, dateStart.getDate()-1);
	    break;
	}
    return(dateEnd);
}
/*================================================================================================*/
// Act on Cancel button click
function SVMXC_IB_CancelIB()
{
	parent.window.location = parent.window.location.protocol + "//" + parent.window.location.host + retURL;
}
/*================================================================================================*/
// Process the event of exiting parent serial number
// 1. Populate product name
// 2. Populate other empty fields if this is a new record
function SVMXC_IB_ExitParentSerial()
{
    var lkid = document.getElementById("parent_serial_lkid").value;
    if(lkid.length > 0 && lkid != ParentIbId)
    	{
	var soql1 = "SELECT SVMXC__Product__r.Name, " +
		    "SVMXC__Top_Level__c, SVMXC__Top_Level__r.SVMXC__Product__r.Name, SVMXC__Top_Level__r.SVMXC__Serial_Lot_Number__c, " +
		    "SVMXC__Company__c, SVMXC__Company__r.Name, " +
		    "SVMXC__Contact__c, SVMXC__Contact__r.Name, SVMXC__Alternate_Company__c, " +
		    "SVMXC__Distributor_Company__c, SVMXC__Distributor_Company__r.Name, " +
		    "SVMXC__Distributor_Contact__c, SVMXC__Distributor_Contact__r.Name, " +
		    "SVMXC__Sales_Order_Number__c, SVMXC__Status__c, SVMXC__Date_Shipped__c, SVMXC__Last_Date_Shipped__c, " +
		    "SVMXC__Date_Ordered__c, SVMXC__Date_Installed__c, SVMXC__Site__c, SVMXC__Site__r.Name, " +
		    "SVMXC__Street__c, SVMXC__City__c, SVMXC__State__c, SVMXC__Zip__c, SVMXC__Country__c, SVMXC__Installation_Notes__c " +
		    "FROM SVMXC__Installed_Product__c WHERE Id = '" + lkid + "'";
	var qr1 = sforce.connection.query(soql1);
	if (qr1 && qr1.size > 0)
	    {
	    var ibrec = qr1.getArray("records")[0];
	    document.getElementById("parent_product").value = ibrec.SVMXC__Product__r.Name;

			// For new IB creation, copy details from parent IB record
			// to make data entry easier
	    if (!InstProdId)
	        {
		if (ibrec.SVMXC__Top_Level__r && ibrec.SVMXC__Top_Level__r.SVMXC__Product__r)
		    SVMXC_AssignFormValue("top_product", ibrec.SVMXC__Top_Level__r.SVMXC__Product__r.Name);

		SVMXC_AssignFormValue("top_serial_lkid", ibrec.SVMXC__Top_Level__c);
		if (ibrec.SVMXC__Top_Level__r)
		    {
		    SVMXC_AssignFormValue("top_serial_lkold", ibrec.SVMXC__Top_Level__r.SVMXC__Serial_Lot_Number__c);
		    SVMXC_AssignFormValue("top_serial", ibrec.SVMXC__Top_Level__r.SVMXC__Serial_Lot_Number__c);
		    }

		if (document.getElementById("company").value.length <= 0)
		    {
		    SVMXC_AssignFormValue("company_lkid", ibrec.SVMXC__Company__c);
		    if (ibrec.SVMXC__Company__r)
			{
			SVMXC_AssignFormValue("company_lkold", ibrec.SVMXC__Company__r.Name);
			SVMXC_AssignFormValue("company", ibrec.SVMXC__Company__r.Name);
			}
		    }

		if (document.getElementById("contact").value.length <= 0)
		    {
		    SVMXC_AssignFormValue("contact_lkid", ibrec.SVMXC__Contact__c);
		    if (ibrec.SVMXC__Contact__r)
			{
			SVMXC_AssignFormValue("contact_lkold", ibrec.SVMXC__Contact__r.Name);
			SVMXC_AssignFormValue("contact", ibrec.SVMXC__Contact__r.Name);
			}
		    }
		if (document.getElementById("alt_company").value.length <= 0)
		    SVMXC_AssignFormValue("alt_company", ibrec.SVMXC__Alternate_Company__c);

		if (document.getElementById("dist_company").value.length <= 0)
		    {
		    SVMXC_AssignFormValue("dist_company_lkid", ibrec.SVMXC__Distributor_Company__c);
		    if (ibrec.SVMXC__Distributor_Company__r)
			{
			SVMXC_AssignFormValue("dist_company_lkold", ibrec.SVMXC__Distributor_Company__r.Name);
			SVMXC_AssignFormValue("dist_company", ibrec.SVMXC__Distributor_Company__r.Name);
			}
		    }

		if (document.getElementById("dist_contact").value.length <= 0)
		    {
		    SVMXC_AssignFormValue("dist_contact_lkid", ibrec.SVMXC__Distributor_Contact__c);
		    if (ibrec.SVMXC__Distributor_Contact__r)
			{
			SVMXC_AssignFormValue("dist_contact_lkold", ibrec.SVMXC__Distributor_Contact__r.Name);
			SVMXC_AssignFormValue("dist_contact", ibrec.SVMXC__Distributor_Contact__r.Name);
		        }
		    }

		if (document.getElementById("sales_order").value.length <= 0)
		    SVMXC_AssignFormValue("sales_order", ibrec.SVMXC__Sales_Order_Number__c);

		if (document.getElementById("site").value.length <= 0)
		    {
		    SVMXC_AssignFormValue("site_lkid", ibrec.SVMXC__Site__c);
		    if (ibrec.SVMXC__Site__r)
			{
			SVMXC_AssignFormValue("site_lkold", ibrec.SVMXC__Site__r.Name);
			SVMXC_AssignFormValue("site", ibrec.SVMXC__Site__r.Name);
			}
		    }
		if (document.getElementById("street").value.length <= 0)
		    {
		    SVMXC_AssignFormValue("street", ibrec.SVMXC__Street__c);
		    SVMXC_AssignFormValue("city", ibrec.SVMXC__City__c);
		    SVMXC_AssignFormValue("state", ibrec.SVMXC__State__c);
		    SVMXC_AssignFormValue("zip", ibrec.SVMXC__Zip__c);
		    SVMXC_AssignFormValue("country", ibrec.SVMXC__Country__c);
		    }
		else
		    SVMXC_IB_ExitSite();

		if (document.getElementById("inst_notes").value.length <= 0)
		    SVMXC_AssignFormValue("inst_notes", ibrec.SVMXC__Installation_Notes__c);

		if (document.getElementById("date_ordered").value.length <= 0)
		    SVMXC_AssignFormDate("date_ordered", ibrec.SVMXC__Date_Ordered__c);

		if (document.getElementById("date_shipped").value.length <= 0)
		    SVMXC_AssignFormDate("date_shipped", ibrec.SVMXC__Date_Shipped__c);

		if (document.getElementById("last_date_shipped").value.length <= 0)
		    SVMXC_AssignFormDate("last_date_shipped", ibrec.SVMXC__Last_Date_Shipped__c);

		if (document.getElementById("date_installed").value.length <= 0)
		    SVMXC_AssignFormDate("date_installed", ibrec.SVMXC__Date_Installed__c);
		}
	    }
	}
    if (lkid.length == 0) { document.getElementById("parent_product").value = ""; }
    ParentIbId = lkid;
}
/*================================================================================================*/
// Process the event of exiting top-level serial number
// Populate product name
function SVMXC_IB_ExitTopSerial()
{
    var lkid = document.getElementById("top_serial_lkid").value;
    if(lkid.length > 0 && lkid != TopIbId)
    	{
	var soql1 = "SELECT SVMXC__Product__r.Name FROM SVMXC__Installed_Product__c WHERE Id = '" + lkid + "'";
	var qr1 = sforce.connection.query(soql1);
	if (qr1 && qr1.size > 0)
	    {
	    var rec1 = qr1.getArray("records")[0];
	    document.getElementById("top_product").value = rec1.SVMXC__Product__r.Name;
	    }
	}
    if (lkid.length == 0) { document.getElementById("top_product").value = ""; }
    TopIbId = lkid;
}
/*================================================================================================*/
// Process the event of exiting contact
// Populate company if blank
function SVMXC_IB_ExitContact()
{
    var compid = document.getElementById("company_lkid").value;

    var lkid = document.getElementById("contact_lkid").value;
    if(lkid.length > 0 && lkid != ContactId && compid.length <= 0)
    	{
	var soql1 = "SELECT AccountId, Account.Name FROM Contact WHERE Id = '" + lkid + "'";
	var qr1 = sforce.connection.query(soql1);
	if (qr1 && qr1.size > 0)
	    {
	    var rec1 = qr1.getArray("records")[0];
	    document.getElementById("company_lkid").value = rec1.AccountId;
	    document.getElementById("company").value = rec1.Account.Name;
	    }
	}
    ContactId = lkid;
}
/*================================================================================================*/
// Process the event of exiting distributor contact
// Populate company if blank
function SVMXC_IB_ExitDistContact()
{
    var compid = document.getElementById("dist_company_lkid").value;

    var lkid = document.getElementById("dist_contact_lkid").value;
    if(lkid.length > 0 && lkid != DistContactId && compid.length <= 0)
    	{
	var soql1 = "SELECT AccountId, Account.Name FROM Contact WHERE Id = '" + lkid + "'";
	var qr1 = sforce.connection.query(soql1);
	if (qr1 && qr1.size > 0)
	    {
	    var rec1 = qr1.getArray("records")[0];
	    document.getElementById("dist_company_lkid").value = rec1.AccountId;
	    document.getElementById("dist_company").value = rec1.Account.Name;
	    }
	}
    DistContactId = lkid;
}
/*================================================================================================*/
// Process the event of exiting Site
// Populate address fields from site
function SVMXC_IB_ExitSite()
{
    var lkid = document.getElementById("site_lkid").value;
    if(lkid.length > 0 && lkid != SiteId)
    	{
	var soql1 = "SELECT SVMXC__Street__c, SVMXC__City__c, SVMXC__State__c, SVMXC__Zip__c, SVMXC__Country__c " +
		    "FROM SVMXC__Site__c WHERE Id = '" + lkid + "'";
	var qr1 = sforce.connection.query(soql1);
	if (qr1 && qr1.size > 0)
	    {
	    var rec1 = qr1.getArray("records")[0];
	    if (rec1.SVMXC__Street__c)
		document.getElementById("street").value = rec1.SVMXC__Street__c;
	    if (rec1.SVMXC__City__c)
		document.getElementById("city").value = rec1.SVMXC__City__c;
	    if (rec1.SVMXC__State__c)
		document.getElementById("state").value = rec1.SVMXC__State__c;
	    if (rec1.SVMXC__Zip__c)
		document.getElementById("zip").value = rec1.SVMXC__Zip__c;
	    if (rec1.SVMXC__Country__c)
		document.getElementById("country").value = rec1.SVMXC__Country__c;
	    }
	}
    SiteId = lkid;
}
/*================================================================================================*/
// Process the event of exiting date shipped
// Copy date shipped to last-date-shipped if it is empty
function SVMXC_IB_ExitDateShipped()
{
    var ds = document.getElementById("date_shipped").value;
    var lds = document.getElementById("last_date_shipped").value;
    if(lds.length <= 0 && ds != lds)
	document.getElementById("last_date_shipped").value = ds;
}
/****=============================================================================*****/
function SVMXC_IB_ShowIBConfiguration(ibid)
{
    var HasParent = true;

    if (!ibid) { return; }

    InstProdId = ibid;

    xbDetectBrowser();

    SVMXC_InitMessageList("IPRDSC1");

    while(HasParent)
    	{
	var soql1 = "SELECT Id, SVMXC__Product__r.Name, SVMXC__Serial_Lot_Number__c, SVMXC__Parent__c, " +
		    "SVMXC__Status__c, SVMXC__Date_Shipped__c, SVMXC__Date_Installed__c, " +
		    "SVMXC__Site__c, SVMXC__Site__r.Name, SVMXC__Site__r.SVMXC__City__c, " +
		    "SVMXC__Site__r.SVMXC__Country__c, SVMXC__City__c, SVMXC__Country__c " +
		    "FROM SVMXC__Installed_Product__c WHERE Id = '" + ibid + "'";
	var qr1 = sforce.connection.query(soql1);
	if (qr1.size <= 0)
	    {
	    alert(SVMXC_GetMessage("MSG002"));
	    return false;
	    }
	ibrec = qr1.getArray("records")[0];
	if (ibrec.SVMXC__Parent__c && ibrec.SVMXC__Parent__c.length > 0)
	    ibid = ibrec.SVMXC__Parent__c;
	else
	    HasParent = false;
	}

    var treeData = ibrec.SVMXC__Product__r.Name;

    if (ibrec.SVMXC__Serial_Lot_Number__c && ibrec.SVMXC__Serial_Lot_Number__c.length > 0) treeData += ", " + ibrec.SVMXC__Serial_Lot_Number__c;
    if (ibrec.SVMXC__Status__c && ibrec.SVMXC__Status__c.length > 0) treeData += ", " + ibrec.SVMXC__Status__c;

    if (ibrec.SVMXC__Site__r)
	{
	if (ibrec.SVMXC__Site__r.SVMXC__City__c) treeData += ", " + ibrec.SVMXC__Site__r.SVMXC__City__c;
	if (ibrec.SVMXC__Site__r.SVMXC__Country__c) treeData += ", " + ibrec.SVMXC__Site__r.SVMXC__Country__c;
	}
    else
	{
	if (ibrec.SVMXC__City__c) treeData += ", " + ibrec.SVMXC__City__c;
	if (ibrec.SVMXC__Country__c) treeData += ", " + ibrec.SVMXC__Country__c;
	}

    foldersTree = gFld("<b>" + treeData + "</b>", "");
    foldersTree.treeID = "IBTree" ;

    	    // Get children for the top-level node
    SVMXC_IB_GetIBChildren(ibrec.Id, foldersTree);

    initializeDocument();	// This is the function that renders the tree on the HTML div
}
/*=====================================================================================*/
function SVMXC_IB_GetIBChildren(ibid, parentNode)
{
    var soql2 = "SELECT Id, SVMXC__Product__r.Name, SVMXC__Serial_Lot_Number__c, " +
		"SVMXC__Status__c, SVMXC__Date_Shipped__c, SVMXC__Date_Installed__c, " +
		"SVMXC__Site__c, SVMXC__Site__r.Name, SVMXC__Site__r.SVMXC__City__c, " +
		"SVMXC__Site__r.SVMXC__Country__c, SVMXC__City__c, SVMXC__Country__c " +
		"FROM SVMXC__Installed_Product__c WHERE SVMXC__Parent__c = '" + ibid + "'";
    var qr2 = sforce.connection.query(soql2);

    if (qr2.size <= 0) { return; }

    var ibrecs = new sforce.QueryResultIterator(qr2);

    while (ibrecs.hasNext())
    	{
	var ibrec = ibrecs.next();

	var treeData = ibrec.SVMXC__Product__r.Name;

	if (ibrec.SVMXC__Serial_Lot_Number__c && ibrec.SVMXC__Serial_Lot_Number__c.length > 0) treeData += ", " + ibrec.SVMXC__Serial_Lot_Number__c;
	if (ibrec.SVMXC__Status__c && ibrec.SVMXC__Status__c.length > 0) treeData += ", " + ibrec.SVMXC__Status__c;

	if (ibrec.SVMXC__Site__r)
	    {
	    if (ibrec.SVMXC__Site__r.SVMXC__City__c) treeData += ", " + ibrec.SVMXC__Site__r.SVMXC__City__c;
	    if (ibrec.SVMXC__Site__r.SVMXC__Country__c) treeData += ", " + ibrec.SVMXC__Site__r.SVMXC__Country__c;
	    }
	else
	    {
	    if (ibrec.SVMXC__City__c) treeData += ", " + ibrec.SVMXC__City__c;
	    if (ibrec.SVMXC__Country__c) treeData += ", " + ibrec.SVMXC__Country__c;
	    }

	var treeChild = insFld(parentNode, gFld(treeData, "/" + ibrec.Id));

	SVMXC_IB_GetIBChildren(ibrec.Id, treeChild);
	}
}
/*================================================================================================*/
/*************<<<<<<<<<<<< GENERIC UTILITIES >>>>>>>>>>>>>>>>> *****************/
// Get the retURL parameter from the window URL
// It is required in save or cancel events
function SVMXC_GetReturnURL()
{
    var theArgName = 'retURL';
    var sArgs = parent.window.location.search.slice(1).split('&');
    r = '';
    for (var i = 0; i < sArgs.length; i++) {
        if (sArgs[i].slice(0,sArgs[i].indexOf('=')) == theArgName) {
            r = sArgs[i].slice(sArgs[i].indexOf('=')+1);
            break;
        }
    }
    retURL = r.length > 0 ? unescape(r).split(',') : '';
}
/*================================================================================================*/
// Assign a given text value to a form field
function SVMXC_AssignFormValue(ctlname, fromval)
{
    if(fromval) { document.getElementById(ctlname).value = fromval; }
    else { document.getElementById(ctlname).value = ""; }
}
/*================================================================================================*/
// Assign a given date value to a form field after converting it to the user's locale format
function SVMXC_AssignFormDate(ctlname, fromdate)
{
    if (fromdate)
        {
	var dc = fromdate.split('-', 3);
	var d = new Date(dc[0], dc[1] - 1, dc[2]);
	var dfmt = parent.UserContext.dateFormat;
	document.getElementById(ctlname).value = DateUtil.formatDate(d, dfmt);
	}
    else
	document.getElementById(ctlname).value = "";
}
/*================================================================================================*/
// Convert a date from user's local format to SFDC's format (YYYY-MM-DD)
function SVMXC_ConvertToSFDCDateFormat(ctlname)
{
    var dt = document.getElementById(ctlname).value;
    if (dt.length <= 0) return null;

    var d = SVMXC_GetDateFromFormat(dt, parent.UserContext.dateFormat);

    var mon = parseInt(d.getMonth()) + 1;
    if (mon < 10) { mon = "0" + mon; }

    var day = parseInt(d.getDate());
    if (day < 10) { day = "0" + day; }

    var dts = d.getFullYear() + "-" + mon + "-" + day;

    return dts;
}
/*================================================================================================*/
// Convert a Date variable to SFDC date format
function SVMXC_ConvertDateToSFDC(dateval)
{
    var mon = parseInt(dateval.getMonth()) + 1;
    if (mon < 10) { mon = "0" + mon; }

    var day = parseInt(dateval.getDate());
    if (day < 10) { day = "0" + day; }

    var dts = dateval.getFullYear() + "-" + mon + "-" + day;

    return dts;
}
/*================================================================================================*/
// This function is a hack from SFDC library. It returns a javascript Date variable
// for a date value in the given format. The SFDC routine returns the time part which we don't want.
function SVMXC_GetDateFromFormat(val,format)
{
	val=val+"";
	format=format+"";
	var i_val=0;
	var i_format=0;
	var c="";
	var token="";
	var token2="";
	var x,y;
	var now=new Date();
	var year=now.getYear();
	var month=now.getMonth()+1;
	var date=1;
	var hh=now.getHours();
	var mm=now.getMinutes();
	var ss=now.getSeconds();
	var ampm="";
	
	while (i_format < format.length) {
		// Get next token from format string
		c=format.charAt(i_format);
		token="";
		while ((format.charAt(i_format)==c) && (i_format < format.length)) {
			token += format.charAt(i_format++);
			}
		// Extract contents of value based on format token
		if (token=="yyyy" || token=="yy" || token=="y") {
			if (token=="yyyy") { x=2;y=4; } // x=2,y=4 to be consistent with java.
			if (token=="yy")   { x=2;y=2; }
			if (token=="y")    { x=2;y=4; }
			year=DateUtil._getInt(val,i_val,x,y);
			if (year==null) { return 0; }
			i_val += year.length;
			if (year.length==2) {
				if (year > 70) { year=1900+(year-0); }
				else { year=2000+(year-0); }
				}
			}
		else if (token=="MMM"||token=="NNN"){
			month=0;
			for (var i=0; i<DateUtil.MONTH_NAMES.length; i++) {
				var month_name=DateUtil.MONTH_NAMES[i];
				if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
					if (token=="MMM"||(token=="NNN"&&i>11)) {
						month=i+1;
						if (month>12) { month -= 12; }
						i_val += month_name.length;
						break;
						}
					}
				}
			if ((month < 1)||(month>12)){return 0;}
			}
		else if (token=="EE"||token=="E"){
			for (var i=0; i<DateUtil.DAY_NAMES.length; i++) {
				var day_name=DateUtil.DAY_NAMES[i];
				if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
					i_val += day_name.length;
					break;
					}
				}
			}
		else if (token=="MM"||token=="M") {
			month=DateUtil._getInt(val,i_val,1,2); // Always use min len 1 to be lenient.
			if(month==null||(month<1)||(month>12)){return 0;}
			i_val+=month.length;}
		else if (token=="dd"||token=="d") {
			date=DateUtil._getInt(val,i_val,1,2); // Always use min len 1 to be lenient.
			if(date==null||(date<1)||(date>31)){return 0;}
			i_val+=date.length;}
		else if (token=="hh"||token=="h") {
			hh=DateUtil._getInt(val,i_val,token.length,2);
			if(hh==null||(hh<1)||(hh>12)){return 0;}
			i_val+=hh.length;}
		else if (token=="HH"||token=="H") {
			hh=DateUtil._getInt(val,i_val,token.length,2);
			if(hh==null||(hh<0)||(hh>23)){return 0;}
			i_val+=hh.length;}
		else if (token=="KK"||token=="K") {
			hh=DateUtil._getInt(val,i_val,token.length,2);
			if(hh==null||(hh<0)||(hh>11)){return 0;}
			i_val+=hh.length;}
		else if (token=="kk"||token=="k") {
			hh=DateUtil._getInt(val,i_val,token.length,2);
			if(hh==null||(hh<1)||(hh>24)){return 0;}
			i_val+=hh.length;hh--;}
		else if (token=="mm"||token=="m") {
			mm=DateUtil._getInt(val,i_val,token.length,2);
			if(mm==null||(mm<0)||(mm>59)){return 0;}
			i_val+=mm.length;}
		else if (token=="ss"||token=="s") {
			ss=DateUtil._getInt(val,i_val,token.length,2);
			if(ss==null||(ss<0)||(ss>59)){return 0;}
			i_val+=ss.length;}
		else if (token=="a") {
		    var am = DateUtil.getAMSymbol();
		    var pm = DateUtil.getPMSymbol();
		    var stra = val.substring(i_val, i_val + am.length);
		    var strp = val.substring(i_val, i_val + pm.length);
			if (stra == am || stra.toUpperCase() == am) {
			    ampm = am;
			} else if (strp == pm || strp.toUpperCase() == pm) {
			    ampm = pm;
			} else {
			    return 0;
		    }
                i_val += ampm.length;
		}
		else {
			if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
			else {i_val+=token.length;}
			}
		}
	// If there are any trailing characters left in the value, it doesn't match
	if (i_val != val.length) { return 0; }
	// Is date valid for month?
	if (month==2) {
		// Check for leap year
		if ( ( (year%4==0)&&(year%100 != 0) ) || (year%400==0) ) { // leap year
			if (date > 29){ return 0; }
			}
		else { if (date > 28) { return 0; } }
		}
	if ((month==4)||(month==6)||(month==9)||(month==11)) {
		if (date > 30) { return 0; }
		}
	// Correct hours value
	if (hh<12 && ampm == DateUtil.getPMSymbol()) { hh=hh-0+12; }
	else if (hh>11 && ampm == DateUtil.getAMSymbol()) { hh-=12; }
	var newdate=new Date(year,month-1,date,hh,mm,ss);
	return newdate;
}
/*================================================================================================*/
// Show a popup calendar adjacent to the date field
// Too bad we can't use the standard date popup SFDC uses
function SVMXC_ShowCal(ctl)
{
    openPopup('/home/calendar.jsp?form=ib_form&' + 'field=' + ctl.id + '&mo=0&callonchange=true',
    	'_blank', 186, 170,
	'width=186,height=170,resizable=yes,toolbar=no,status=no,scrollbars=no,menubar=no,directories=no,location=no,dependant=yes',
	true);
}
/*================================================================================================*/
// Check if the given field is blank
function SVMXC_IsFieldBlank(fname)
{
    var ctl = document.getElementById(fname);

    if((ctl.type == "text" || ctl.type == "hidden") && (!ctl.value || ctl.value.length == 0)) { return true; }

    if(ctl.type == "select-one" && ctl.selectedIndex == -1) { return true; }

    return false;
}
/*================================================================================================*/
// Check if the given lookup field has a valid value linked to an ID
function SVMXC_IsValidLookup(fname)
{
    var ctl = document.getElementById(fname);
    var idctl = document.getElementById(fname + "_lkid");

    if (ctl.value && ctl.value.length > 0 && idctl.value.length == 0) { return false; }

    return true;
}
/*================================================================================================*/
// Check if the given date is valid as per the user's locale
function SVMXC_IsValidDate(fname)
{
    var ctl = document.getElementById(fname);
    return(DateUtil.isDate(ctl.value, parent.UserContext.dateFormat));
}
/*================================================================================================*/
// Build a global hash table of message numbers and messages.
// This array will be used for displaying info/warning/error messages to the user.
function SVMXC_InitMessageList(submoduleid)
{
    var found = false;

    var LangList = new Array();

    		// Hash (Map) of SFDC language ISO code to Language picklist in ServiceMax tags object
    LangList["en_US"] = "English";
    LangList["de"] = "German";
    LangList["es"] = "Spanish";
    LangList["fr"] = "French";
    LangList["it"] = "Italian";
    LangList["ja"] = "Japanese";
    LangList["sv"] = "Swedish";
    LangList["ko"] = "Korean";
    LangList["zh_TW"] = "Chinese (Traditional)";
    LangList["zh_CN"] = "Chinese (Simplified)";
    LangList["pt_BR"] = "Portuguese (Brazilian)";
    LangList["nl_NL"] = "Dutch";
    LangList["da"] = "Danish";
    LangList["th"] = "Thai";
    LangList["fi"] = "Finnish";
    LangList["ru"] = "Russian";

    var UserLang = sforce.connection.getUserInfo().userLanguage;	// ISO code of the user's language

    if (!LangList[UserLang]) { UserLang = "English"; }		// if user's language is not found, default it to English
    else { UserLang = LangList[UserLang]; }

    var soql = "SELECT Id, Name, SVMXC__Tag_Text__c, SVMXC__Language__c " +
    		"FROM SVMXC__ServiceMax_Tags__c " +
		"WHERE SVMXC__SubmoduleID__c = '" + submoduleid + "' " +
		"AND SVMXC__Language__c IN ('Master', '" + UserLang + "')";
    var qr = sforce.connection.query(soql);
    var tagrecs = new sforce.QueryResultIterator(qr);
    while (tagrecs.hasNext())
    	{
        var tagrec = tagrecs.next();
	var TagId = tagrec.Name;
	var TagText = tagrec.SVMXC__Tag_Text__c;
	var Lang = tagrec.SVMXC__Language__c;
	if (Lang == "Master" && !MsgList[TagId])
	    MsgList[TagId] = TagText;
	else if (Lang == UserLang && TagText && TagText.length > 0)	// Translation available in the specific language
	    MsgList[TagId] = TagText;

	found = true;
	}

    if (!found)
	{
	MsgList['MSG001'] = 'An internal error occurred when saving data. Please contact your ServiceMax administrator to resolve this.';
	MsgList['MSG002'] = 'An internal error occurred when retrieving data. Please contact your ServiceMax administrator to resolve this.';
	MsgList['MSG003'] = 'A valid Product should be selected.';
	MsgList['MSG004'] = 'This is a serialized product. Please enter a valid serial number.';
	MsgList['MSG005'] = 'This is not a valid serial number. Use the lookup to select a valid parent serial number.';
	MsgList['MSG006'] = 'This is not a valid serial number. Use the lookup to select a valid top-level serial number.';
	MsgList['MSG007'] = 'A valid Account should be selected.';
	MsgList['MSG008'] = 'Please select a valid status from the list.';
	MsgList['MSG009'] = 'This is not a valid contact. Use the lookup to select a valid contact.';
	MsgList['MSG010'] = 'This is not a valid Distributor Account. Use the lookup to select a valid Distributor Account.';
	MsgList['MSG011'] = 'This is not a valid distributor contact. Use the lookup to select a valid distributor contact.';
	MsgList['MSG012'] = 'This is not a valid site. Use the lookup to select a valid distributor site.';
	MsgList['MSG013'] = 'Invalid date format. Please enter a valid date for Date Ordered.';
	MsgList['MSG014'] = 'Invalid date format. Please enter a valid date for Date Shipped.';
	MsgList['MSG015'] = 'Invalid date format. Please enter a valid date for Last Date Shipped.';
	MsgList['MSG016'] = 'Invalid date format. Please enter a valid date for Date Installed.';
	MsgList['MSG017'] = 'Ship date cannot be earlier than Order date.';
	MsgList['MSG018'] = 'Install date cannot be earlier than Order date.';
	MsgList['MSG019'] = 'Install date cannot be earlier than Ship date.';
	MsgList['MSG020'] = 'No warranty templates available to choose from.';
	MsgList['MSG021'] = 'Please select a warranty template to proceed.';
	MsgList['MSG022'] = 'Please enter a valid ship date to create warranty.';
	MsgList['MSG023'] = 'Please enter a valid install date to create warranty.';
	MsgList['LAB001'] = 'Product';
	MsgList['LAB002'] = 'Serial/Lot Number';
	MsgList['LAB003'] = 'Parent';
	MsgList['LAB004'] = 'Serial/Lot Number';
	MsgList['LAB005'] = 'Top-Level';
	MsgList['LAB006'] = 'Serial/Lot Number';
	MsgList['LAB007'] = 'Asset Tag';
	MsgList['LAB008'] = 'Account';
	MsgList['LAB009'] = 'Contact';
	MsgList['LAB010'] = 'Alternate Account';
	MsgList['LAB011'] = 'Distributor Account';
	MsgList['LAB012'] = 'Distributor Contact';
	MsgList['LAB013'] = 'Sales Order Number';
	MsgList['LAB014'] = 'Status';
	MsgList['LAB015'] = 'Date Shipped';
	MsgList['LAB016'] = 'Last Date Shipped';
	MsgList['LAB017'] = 'Date Ordered';
	MsgList['LAB018'] = 'Date Installed';
	MsgList['LAB019'] = 'Site';
	MsgList['LAB020'] = 'Street';
	MsgList['LAB021'] = 'City';
	MsgList['LAB022'] = 'State';
	MsgList['LAB023'] = 'Zip';
	MsgList['LAB024'] = 'Country';
	MsgList['LAB025'] = 'Installation Notes';
	MsgList['LAB026'] = 'Select';
	MsgList['LAB027'] = 'Warranty Template';
	MsgList['LAB028'] = 'Submit';
	MsgList['LAB029'] = 'Save';
	MsgList['LAB030'] = 'Cancel';
	}
}
/*================================================================================================*/
// Get the message for the given message number from the global hash table.
// Return "setup-issue" if the message is not found
function SVMXC_GetMessage(MsgNum)
{
    if (!MsgList[MsgNum])
    	return "Message definition for " + MsgNum + " not found. This is a setup issue.\nPlease contact your ServiceMax administrator to resolve this.";

    return MsgList[MsgNum];
}
/*================================================================================================*/
function SVMXC_IB_ShowWarrTemplates()
{
    var rownum = 0;
    SVMXC_GetReturnURL();

    SVMXC_InitMessageList("IPRDSC1");

    var soql1 = "SELECT Id, Name FROM SVMXC__Service_Template__c WHERE SVMXC__Template_Type__c = 'Warranty'";
    var qr1 = sforce.connection.query(soql1);
    if (qr1.size <= 0)
    	{
	alert(SVMXC_GetMessage("MSG020"));
	SVMXC_IB_CancelIB();
	return false;
	}

    var tbody = document.getElementById("list_tbody");

    clear_table(tbody);
    var tr = makeRow({'class':'headerRow'});
    tbody.appendChild(tr);

    createTag(tr,"th",{'scope':'col','align':'center'}).innerHTML = "<a href=\"#\" title=\"\">" + SVMXC_GetMessage("LAB026") + "</a>";

    createTag(tr,"th",{'scope':'col'}).innerHTML = "<a href=\"#\" title=\"\">" + SVMXC_GetMessage("LAB027") + "</a>";

    var wt_recs = new sforce.QueryResultIterator(qr1);
    while(wt_recs.hasNext())
	{
	var wtrec = wt_recs.next();
	var tr = makeRow(makeAttrs(rownum,tbody));
	tr.sobject = wtrec;
	tbody.appendChild(tr);

		// Col 1. Radio button
	createTag(tr,"td",[]).innerHTML =
	    "<input type=\"radio\" name=\"radio\" value=\"" + wtrec.Id + "\"></input>";

		// Col 2. Template Name
	createTag(tr,"th",{"scope":"row"}).innerHTML =
		"<a target=_blank id=\"" + wtrec.Id + "wtname\" href=\"/" + wtrec.Id + "\">" + wtrec.Name + "</a>";

		// Col 3. Hidden Template Id
	createTag(tr,"td",[]).innerHTML =
	    "<input type=\"hidden\" id=\"" + wtrec.Id + "wtid\" value=\"" + wtrec.Id + "\"></input>";

	rownum+=1;
	}
}
/*=====================================================================================*/
function createTag(parent, name, keyvalPairs)
{
    var ret;
    var browser = navigator.appName;
    if (browser == "Microsoft Internet Explorer") {
	    var trTag = "<"+name+" ";
	    for (key in keyvalPairs) {
			    trTag += key + "=\"" + keyvalPairs[key] + "\"";
	    }
	    trTag += ">";
	    ret = document.createElement(trTag);
    } else {
	    ret = document.createElement(name);
	    for (key in keyvalPairs) {
		    ret.setAttribute(key, keyvalPairs[key]);
	    }
    }
    parent.appendChild(ret);
    return ret;
}
/*=====================================================================================*/
function SVMXC_IB_CreateWarrantyFromTemplate(ibid)
{
	document.getElementById('Submit').disabled = true;
	var checked = false;
    var rlist = document.getElementsByName("radio");

	for (var i = 0; i < rlist.length; i++)
	{
	 if (rlist[i].checked)
		{
		  checked = true;
		  break;
		}
	}
	
    if (!checked)
    {
		alert(SVMXC_GetMessage("MSG021") + "\n")
		document.getElementById('Submit').disabled = false;
		return;	
	}

	    // Get installed product record
    var soql1 = "SELECT SVMXC__Product__c, SVMXC__Product__r.Name, SVMXC__Serial_Lot_Number__c, " +
		"SVMXC__Parent__c, SVMXC__Parent__r.SVMXC__Product__r.Name, SVMXC__Parent__r.SVMXC__Serial_Lot_Number__c, " +
		"SVMXC__Top_Level__c, SVMXC__Top_Level__r.SVMXC__Product__r.Name, SVMXC__Top_Level__r.SVMXC__Serial_Lot_Number__c, " +
		"SVMXC__Asset_Tag__c, SVMXC__Company__c, SVMXC__Company__r.Name, " +
		"SVMXC__Contact__c, SVMXC__Contact__r.Name, SVMXC__Alternate_Company__c, " +
		"SVMXC__Distributor_Company__c, SVMXC__Distributor_Company__r.Name, " +
		"SVMXC__Distributor_Contact__c, SVMXC__Distributor_Contact__r.Name, " +
		"SVMXC__Sales_Order_Number__c, SVMXC__Status__c, SVMXC__Date_Shipped__c, SVMXC__Last_Date_Shipped__c, " +
		"SVMXC__Date_Ordered__c, SVMXC__Date_Installed__c, SVMXC__Site__c, SVMXC__Site__r.Name, " +
		"SVMXC__Street__c, SVMXC__City__c, SVMXC__State__c, SVMXC__Zip__c, SVMXC__Country__c, SVMXC__Installation_Notes__c " +
		"FROM SVMXC__Installed_Product__c WHERE Id = '" + ibid + "'";
    try {
	var qr1 = sforce.connection.query(soql1);
	}
    catch (error) {	alert(error);	return;	}
    var ibrec = qr1.getArray("records")[0];

    var wtid = document.getElementById(rlist[i].value+"wtid").value;
    var wtname = document.getElementById(rlist[i].value+"wtname").innerHTML;

	    // Get warranty template definition
    var soql2 = "SELECT Name, SVMXC__All_Products_Covered__c, SVMXC__All_Services_Covered__c, " +
    		"SVMXC__Coverage_Effective_From__c, SVMXC__Duration_of_Time_Coverage__c, " +
		"SVMXC__Duration_of_Material_Coverage__c, SVMXC__Duration_of_Expenses__c, " +
		"SVMXC__Exclusions__c, SVMXC__Expenses_Covered__c, SVMXC__Invoice_Required__c, " +
		"SVMXC__Loaner_Provided__c, SVMXC__Material_Covered__c, SVMXC__Onsite_Repair__c, " +
		"SVMXC__RMA_Required__c, SVMXC__Shipment_Allowed__c, SVMXC__Template_Type__c, " +
		"SVMXC__Time_Covered__c, SVMXC__Transferable__c, SVMXC__Unit_of_Time_Material__c, " +
		"SVMXC__Unit_of_Time_Expenses__c, SVMXC__Unit_of_Time__c, SVMXC__Walk_in_Allowed__c " +
		"FROM SVMXC__Service_Template__c WHERE Id = '" + wtid + "'";
	
    var qr2 = sforce.connection.query(soql2);
    var wt = qr2.getArray("records")[0];

	    // Build the warranty record
    var warr = new sforce.SObject("SVMXC__Warranty__c");
    warr.SVMXC__Installed_Product__c = ibid;
    warr.SVMXC__Service_Template__c = wtid;
    warr.SVMXC__All_Products_Covered__c = wt.SVMXC__All_Products_Covered__c;
    warr.SVMXC__All_Services_Covered__c = wt.SVMXC__All_Services_Covered__c;
    warr.SVMXC__Time_Covered__c = wt.SVMXC__Time_Covered__c;
    warr.SVMXC__Transferable__c = wt.SVMXC__Transferable__c;
    warr.SVMXC__Walk_in_Allowed__c = wt.SVMXC__Walk_in_Allowed__c;
    warr.SVMXC__Expenses_Covered__c = wt.SVMXC__Expenses_Covered__c;
    warr.SVMXC__Invoice_Required__c = wt.SVMXC__Invoice_Required__c;
    warr.SVMXC__Loaner_Provided__c = wt.SVMXC__Loaner_Provided__c;
    warr.SVMXC__Material_Covered__c = wt.SVMXC__Material_Covered__c;
    warr.SVMXC__Onsite_Repair__c = wt.SVMXC__Onsite_Repair__c;
    warr.SVMXC__RMA_Required__c = wt.SVMXC__RMA_Required__c;
    warr.SVMXC__Shipment_Allowed__c = wt.SVMXC__Shipment_Allowed__c;
    warr.SVMXC__Exclusions__c = wt.SVMXC__Exclusions__c;
 

    var currdate = new Date();
	//alert('date shipped length' + ibrec.SVMXC__Date_Shipped__c.length);
    if (wt.SVMXC__Coverage_Effective_From__c == "Ship Date" )
	{
		if(ibrec.SVMXC__Date_Shipped__c)
			warr.SVMXC__Start_Date__c = ibrec.SVMXC__Date_Shipped__c;
		else
			{
				alert(SVMXC_GetMessage("MSG022"));
				document.getElementById('Submit').disabled = false;
				return false;
			}
	}
    else if (wt.SVMXC__Coverage_Effective_From__c == "Install Date" )
	{
		if (ibrec.SVMXC__Date_Installed__c)
			warr.SVMXC__Start_Date__c = ibrec.SVMXC__Date_Installed__c;
		else
			{
				alert(SVMXC_GetMessage("MSG023"));
				document.getElementById('Submit').disabled = false;
				return false;
			}
	}
	else 	
	    warr.SVMXC__Start_Date__c = SVMXC_ConvertDateToSFDC(currdate);
	
    var dtTimeEnd = SVMXC_CalcWarrEndDate(warr.SVMXC__Start_Date__c, wt.SVMXC__Duration_of_Time_Coverage__c, wt.SVMXC__Unit_of_Time__c);
    warr.SVMXC__End_Date_Time_Covered__c = SVMXC_ConvertDateToSFDC(dtTimeEnd);

    var dtPartsEnd = SVMXC_CalcWarrEndDate(warr.SVMXC__Start_Date__c, wt.SVMXC__Duration_of_Material_Coverage__c, wt.SVMXC__Unit_of_Time_Material__c);
    warr.SVMXC__End_Date_Material_Covered__c = SVMXC_ConvertDateToSFDC(dtPartsEnd);

    var dtExpEnd = SVMXC_CalcWarrEndDate(warr.SVMXC__Start_Date__c, wt.SVMXC__Duration_of_Expenses__c, wt.SVMXC__Unit_of_Time_Expenses__c);
    warr.SVMXC__End_Date_Expenses_Covered__c = SVMXC_ConvertDateToSFDC(dtExpEnd);

    // Overall end date of the warranty is the maximum of time/parts/expenses coverage end dates
    if (dtTimeEnd >= dtPartsEnd && dtTimeEnd >= dtExpEnd)
	warr.SVMXC__End_Date__c  = SVMXC_ConvertDateToSFDC(dtTimeEnd); 
    else if (dtPartsEnd >= dtTimeEnd && dtPartsEnd>= dtExpEnd)
	warr.SVMXC__End_Date__c = SVMXC_ConvertDateToSFDC(dtPartsEnd); 
    else if (dtExpEnd >= dtTimeEnd && dtExpEnd>= dtPartsEnd)
	warr.SVMXC__End_Date__c = SVMXC_ConvertDateToSFDC(dtExpEnd); 
    try {
	var ret = sforce.connection.create([warr]);
	}
    catch (e) {
	alert(SVMXC_GetMessage("MSG001") + "\n" + e)
	return false;
	}

    parent.window.location = parent.window.location.protocol + "//" + parent.window.location.host + "/" + ret[0].id;

    return true;
}
/*=====================================================================================*/
function drawMsg(ta,msg)
{
    if (!ta) ta = document.getElementById("list_tbody");
    clear_table( ta );
    var tr = makeRow({'class':'headerRow'});ta.appendChild(tr);
    createTag(tr,"th",{'class':'actionColumn','scope':'col'}).innerHTML = msg;
}
/*=====================================================================================*/
function clear_table(tbody)
{
    if (!tbody) tbody = document.getElementById("list_tbody");
    while (tbody.rows.length > 0) 	{ tbody.deleteRow(0); }
}
/*=====================================================================================*/
function makeAttrs(i,ta)
{
    var atts = new Object();
    // how many rows in this table so far
    try { ta.even } catch (e) { ta.even = i};
    if (i==0) { // skin stuff
	    atts["class"] = "even first";
    } else if (ta.even == true) {
	    atts["class"] = "even";
    } else {
	    atts["class"] = "odd";
    }
    ta.even = !ta.even;
    atts["onmouseout"] = "if (typeof(hiOff) != 'undefined' && this.active == false){hiOff(this);}";
    atts["onmouseover"] = "if (typeof(hiOn) != 'undefined'){hiOn(this);}";
    return atts;
}
/*=====================================================================================*/
function makeRow(atts)
{
    var browser = navigator.appName;
    if (browser == "Microsoft Internet Explorer") {
	    var trTag = "<TR ";
	    for (key in atts) {
		    trTag += key + "=\"" + atts[key] + "\"";
	    }
	    trTag += ">";
	    var ret = document.createElement(trTag);
    } else {
	    var tr = document.createElement("TR");
	    for (key in atts) {
		    tr.setAttribute(key, atts[key]);
	    }
	    var ret = tr;
    }
    ret.active = false;
    return ret;
}
/*=====================================================================================*/

var foldersTree;

//To customize the tree, overwrite these variables in the configuration file (demoFramesetNode.js, etc.)
var USETEXTLINKS = 1;
var STARTALLOPEN = 1;
var USEFRAMES = 0;
var USEICONS = 0;
var WRAPTEXT = 1;
var PERSERVESTATE = 0; //backward compatibility
var PRESERVESTATE = 0;
var ICONPATH = parent.window.location.protocol + "//" + parent.window.location.host + "/img/tree/";
var HIGHLIGHT = 0;
var HIGHLIGHT_COLOR = 'blue';
var HIGHLIGHT_BG    = 'white';
var BUILDALL = 0;
var GLOBALTARGET = "R"; // variable only applicable for addChildren uses


//Other variables
var lastClicked = null;
var lastClickedColor;
var lastClickedBgColor;
var indexOfEntries = new Array 
var nEntries = 0 
var browserVersion = 1 
var selectedFolder=0
var lastOpenedFolder=null
var t=5
var doc = document
var supportsDeferral = false

doc.yPos = 0

if(typeof HTMLElement!="undefined" && !HTMLElement.prototype.insertAdjacentElement){
	HTMLElement.prototype.insertAdjacentElement = function (where,parsedNode)
	{
		switch (where){
		case 'BeforeBegin':
			this.parentNode.insertBefore(parsedNode,this)
			break;
		case 'AfterBegin':
			this.insertBefore(parsedNode,this.firstChild);
			break;
		case 'BeforeEnd':
			this.appendChild(parsedNode);
			break;
		case 'AfterEnd':
			if (this.nextSibling) 
				this.parentNode.insertBefore(parsedNode,this.nextSibling);
			else this.parentNode.appendChild(parsedNode);
			break;
		}
	}

	HTMLElement.prototype.insertAdjacentHTML = function(where,htmlStr)
	{
		var r = this.ownerDocument.createRange();
		r.setStartBefore(this);
		var parsedHTML = r.createContextualFragment(htmlStr);
		this.insertAdjacentElement(where,parsedHTML)
	}
}

function xbDetectBrowser()
{
  var oldOnError = window.onerror;
  var element = null;

  window.onerror = null;
  
  // work around bug in xpcdom Mozilla 0.9.1
  window.saveNavigator = window.navigator;

  navigator.OS    = '';
  navigator.version  = parseFloat(navigator.appVersion);
  navigator.org    = '';
  navigator.family  = '';

  var platform;
  if (typeof(window.navigator.platform) != 'undefined')
  {
    platform = window.navigator.platform.toLowerCase();
    if (platform.indexOf('win') != -1)
      navigator.OS = 'win';
    else if (platform.indexOf('mac') != -1)
      navigator.OS = 'mac';
    else if (platform.indexOf('unix') != -1 || platform.indexOf('linux') != -1 || platform.indexOf('sun') != -1)
      navigator.OS = 'nix';
  }

  var i = 0;
  var ua = window.navigator.userAgent.toLowerCase();
  
  if (ua.indexOf('safari') != -1)
  {
    i = ua.indexOf('safari');
    navigator.family = 'safari';
    navigator.org = 'safari';
    navigator.version = parseFloat('0' + ua.substr(i+7), 10);
  }
  else if (ua.indexOf('opera') != -1)
  {
    i = ua.indexOf('opera');
    navigator.family  = 'opera';
    navigator.org    = 'opera';
    navigator.version  = parseFloat('0' + ua.substr(i+6), 10);
  }
  else if ((i = ua.indexOf('msie')) != -1)
  {
    navigator.org    = 'microsoft';
    navigator.version  = parseFloat('0' + ua.substr(i+5), 10);
    
    if (navigator.version < 4)
      navigator.family = 'ie3';
    else
      navigator.family = 'ie4'
  }
  else if (ua.indexOf('gecko') != -1)
  {
    navigator.family = 'gecko';
    var rvStart = ua.indexOf('rv:');
    var rvEnd   = ua.indexOf(')', rvStart);
    var rv      = ua.substring(rvStart+3, rvEnd);
    var rvParts = rv.split('.');
    var rvValue = 0;
    var exp     = 1;

    for (var i = 0; i < rvParts.length; i++)
    {
      var val = parseInt(rvParts[i]);
      rvValue += val / exp;
      exp *= 100;
    }
    navigator.version = rvValue;

    if (ua.indexOf('netscape') != -1)
      navigator.org = 'netscape';
    else if (ua.indexOf('compuserve') != -1)
      navigator.org = 'compuserve';
    else
      navigator.org = 'mozilla';
  }
  else if ((ua.indexOf('mozilla') !=-1) && (ua.indexOf('spoofer')==-1) && (ua.indexOf('compatible') == -1) && (ua.indexOf('opera')==-1)&& (ua.indexOf('webtv')==-1) && (ua.indexOf('hotjava')==-1))
  {
    var is_major = parseFloat(navigator.appVersion);
    
    if (is_major < 4)
      navigator.version = is_major;
    else
    {
      i = ua.lastIndexOf('/')
      navigator.version = parseFloat('0' + ua.substr(i+1), 10);
    }
    navigator.org = 'netscape';
    navigator.family = 'nn' + parseInt(navigator.appVersion);
  }
  else if ((i = ua.indexOf('aol')) != -1 )
  {
    // aol
    navigator.family  = 'aol';
    navigator.org    = 'aol';
    navigator.version  = parseFloat('0' + ua.substr(i+4), 10);
  }
  else if ((i = ua.indexOf('hotjava')) != -1 )
  {
    // hotjava
    navigator.family  = 'hotjava';
    navigator.org    = 'sun';
    navigator.version  = parseFloat(navigator.appVersion);
  }

  window.onerror = oldOnError;
}

// ***************************************************************** 
function Folder(folderDescription, hreference) //constructor 
{ 
  //constant data 
  this.desc = folderDescription; 
  this.hreference = hreference;
  this.id = -1;
  this.navObj = 0;
  this.iconImg = 0; 
  this.nodeImg = 0;
  this.iconSrc = ICONPATH + "ftv2folderopen.gif";
  this.iconSrcClosed = ICONPATH + "ftv2folderclosed.gif";
  this.children = new Array;
  this.nChildren = 0;
  this.level = 0;
  this.leftSideCoded = "";
  this.isLastNode=false;
  this.parentObj = null;
  this.maySelect=true;
  this.prependHTML = ""
 
  //dynamic data 
  this.isOpen = false
  this.isLastOpenedFolder = false
  this.isRendered = 0
 
  //methods 
  this.initialize = initializeFolder 
  this.setState = setStateFolder 
  this.addChild = addChild 
  this.addChildren = addChildren
  this.createIndex = createEntryIndex 
  this.escondeBlock = escondeBlock
  this.esconde = escondeFolder 
  this.folderMstr = folderMstr 
  this.renderOb = drawFolder 
  this.totalHeight = totalHeight 
  this.subEntries = folderSubEntries 
  this.linkHTML = linkFolderHTML
  this.blockStartHTML = blockStartHTML
  this.blockEndHTML = blockEndHTML
  this.nodeImageSrc = nodeImageSrc
  this.iconImageSrc = iconImageSrc
  this.getID = getID
  this.forceOpeningOfAncestorFolders = forceOpeningOfAncestorFolders
} 
 
function initializeFolder(level, lastNode, leftSide) 
{ 
  var i=0       
  nc = this.nChildren 
   
  this.createIndex() 
  this.level = level
  this.leftSideCoded = leftSide

  if (browserVersion == 0 || STARTALLOPEN==1)
    this.isOpen=true;

  if (level>0)
    if (lastNode) //the last child in the children array 
		leftSide = leftSide + "0"
	else
		leftSide = leftSide + "1"

  this.isLastNode = lastNode
 
  if (nc > 0) 
  { 
    level = level + 1 
    for (i=0 ; i < this.nChildren; i++)  
    {
      if (typeof this.children[i].initialize == 'undefined') //document node was specified using the addChildren function
      {
        if (typeof this.children[i][0] == 'undefined' || typeof this.children[i] == 'string')
        {
          this.children[i] = ["item incorrectly defined", ""];
        }

        //Basic initialization of the Item object
        //These members or methods are needed even before the Item is rendered
        this.children[i].initialize=initializeItem;
        this.children[i].createIndex=createEntryIndex;
        if (typeof this.children[i].maySelect == 'undefined')
          this.children[i].maySelect=true
        this.children[i].forceOpeningOfAncestorFolders = forceOpeningOfAncestorFolders
      }
      if (i == this.nChildren-1) 
        this.children[i].initialize(level, 1, leftSide)
      else 
        this.children[i].initialize(level, 0, leftSide)
    } 
  } 
} 
 
function drawFolder(insertAtObj) 
{ 
    var nodeName = ""
    var auxEv = ""
    var docW = ""
    var i=0

    finalizeCreationOfChildDocs(this);

    var leftSide = leftSideHTML(this.leftSideCoded);

    auxEv = "<a href='javascript:clickOnNode(\"" + this.getID()+ "\")'>" ;

    nodeName = this.nodeImageSrc();
 
    if (this.level>0) 
	{
	if (this.isLastNode) //the last child in the children array 
	    leftSide = leftSide + "<td valign=top>" + auxEv + "<img name='nodeIcon" + this.id + "' id='nodeIcon" + this.id + "' src='" + nodeName + "' width=20 height=16 border=0></a></td>"
	else 
	    leftSide = leftSide + "<td valign=top background=" + ICONPATH + "chain.gif>" + auxEv + "<img name='nodeIcon" + this.id + "' id='nodeIcon" + this.id + "' src='" + nodeName + "' width=20 height=16 border=0></a></td>"
	}
    this.isRendered = 1

    docW = this.blockStartHTML("folder");

    docW = docW + "<tr>" + leftSide + "<td valign=top>";
    if (USEICONS)
	{
	docW = docW + this.linkHTML(false) 
	docW = docW + "<img id='folderIcon" + this.id + "' name='folderIcon" + this.id + "' src='" + this.iconImageSrc() + "' border=0></a>"
	}
    else
	{
	if (this.prependHTML == "")
	    docW = docW + "<img src=" + ICONPATH + "empty.gif height=16 width=20>"
	}
    docW = docW + "</td>"+this.prependHTML+"<td valign=middle width=100%>"

    if (USETEXTLINKS) 
	{ 
	docW = docW + this.linkHTML(true) 
	docW = docW + this.desc + "</a>"
	} 
    else 
	docW = docW + this.desc

    docW = docW + "</td>"
    docW = docW + this.blockEndHTML()

    if (insertAtObj == null)
	{
	if (supportsDeferral) {
	    insertAtObj = getElById("domRoot")
	    insertAtObj.insertAdjacentHTML("BeforeEnd", docW)
	    }
	else
	    {
	    doc.write(docW)
	    }
	}
    else
	{
	insertAtObj.insertAdjacentHTML("AfterEnd", docW)
	}
 
    this.navObj = getElById("folder"+this.id)

    if (USEICONS)
      this.iconImg = getElById("folderIcon"+this.id) 

    this.nodeImg = getElById("nodeIcon"+this.id)
} 
 
function setStateFolder(isOpen) 
{ 
  var subEntries 
  var totalHeight 
  var fIt = 0 
  var i=0 
  var currentOpen
 
  if (isOpen == this.isOpen) 
    return 
 
  this.isOpen = isOpen;

  if (!this.isOpen && this.isLastOpenedfolder)
  {
	lastOpenedFolder = null;
	this.isLastOpenedfolder = false;
  }
  propagateChangesInState(this) 
} 
 
function propagateChangesInState(folder) 
{   
    var i=0 

	//Change icon
    if (folder.nChildren > 0 && folder.level>0)  //otherwise the one given at render stays
	folder.nodeImg.src = folder.nodeImageSrc()

	//Change node
    if (USEICONS)
	folder.iconImg.src = folder.iconImageSrc()

	//Propagate changes
    for (i=folder.nChildren-1; i>=0; i--)
	{
	if (folder.isOpen) 
	    folder.children[i].folderMstr(folder.navObj)
	else 
	    folder.children[i].esconde() 
	}
} 
 
function escondeFolder() 
{ 
  this.escondeBlock()
   
  this.setState(0) 
} 
 
function linkFolderHTML(isTextLink) 
{
    var txtstyle = "";
    var docW = "";

    if (this.hreference) 
	{ 
	if (this.hreference.substring(0,16) == "/" + InstProdId.substring(0,15)) { txtstyle = "style=\'color:blue; background-color:LightBlue\'"; }

	if (USEFRAMES)
	    docW = docW + "<a " + txtstyle + " href='" + this.hreference + "' TARGET=\"basefrm\" "
	else
	    docW = docW + "<a " + txtstyle + " href='" + this.hreference + "' TARGET=_blank "

	if (isTextLink) {
	    docW += "id=\"itemTextLink"+this.id+"\" ";
	    }

	docW = docW + "onClick='javascript:clickOnFolder(\""+this.getID()+"\")'"
	docW = docW + ">"
	} 
    else 
	{
	txtstyle = "style=\'color:blue; background-color:LightBlue\'";
	docW = docW + "<a " + txtstyle + ">" 
	}

    return docW;
} 
 
function addChild(childNode) 
{ 
  this.children[this.nChildren] = childNode 
  childNode.parentObj = this
  this.nChildren++ 
  return childNode 
} 

//The list can contain either a Folder object or a sub list with the arguments for Item 
function addChildren(listOfChildren) 
{ 
  this.children = listOfChildren 
  this.nChildren = listOfChildren.length
  for (i=0; i<this.nChildren; i++)
    this.children[i].parentObj = this
} 

function folderSubEntries() 
{ 
  var i = 0 
  var se = this.nChildren 
 
  for (i=0; i < this.nChildren; i++){ 
    if (this.children[i].children) //is a folder 
      se = se + this.children[i].subEntries() 
  } 
 
  return se 
} 

function nodeImageSrc() {
  var srcStr = "";

  if (this.isLastNode) //the last child in the children array 
  { 
    if (this.nChildren == 0)
      srcStr = ICONPATH + "nodeEnd.gif"
    else
      if (this.isOpen)
        srcStr = ICONPATH + "minusEnd.gif"  
      else
        srcStr = ICONPATH + "plusEnd.gif"  
  } 
  else 
  { 
    if (this.nChildren == 0)
      srcStr = ICONPATH + "node.gif"
    else
      if (this.isOpen)
        srcStr = ICONPATH + "minus.gif"
      else
        srcStr = ICONPATH + "plus.gif"
  }   
  return srcStr;
}

function iconImageSrc() {
  if (this.isOpen)
    return(this.iconSrc)
  else
    return(this.iconSrcClosed)
} 
 
function Item(itemDescription) // Constructor 
{ 
  // constant data 
  this.desc = itemDescription 

  this.level = 0
  this.isLastNode = false
  this.leftSideCoded = ""
  this.parentObj = null

  this.maySelect=true

  this.initialize = initializeItem;
  this.createIndex = createEntryIndex;
  this.forceOpeningOfAncestorFolders = forceOpeningOfAncestorFolders;

  finalizeCreationOfItem(this)
} 

//Assignments that can be delayed when the item is created with folder.addChildren
//The assignments that cannot be delayed are done in addChildren and in initializeFolder
//Additionaly, some assignments are also done in finalizeCreationOfChildDocs itself
function finalizeCreationOfItem(itemArray)
{
  itemArray.navObj = 0 //initialized in render() 
  itemArray.iconImg = 0 //initialized in render() 
  itemArray.iconSrc = ICONPATH + "ftv2doc.gif" 
  itemArray.isRendered = 0
  itemArray.nChildren = 0
  itemArray.prependHTML = ""
 
  // methods 
  itemArray.escondeBlock = escondeBlock
  itemArray.esconde = escondeBlock
  itemArray.folderMstr = folderMstr 
  itemArray.renderOb = drawItem 
  itemArray.totalHeight = totalHeight 
  itemArray.blockStartHTML = blockStartHTML
  itemArray.blockEndHTML = blockEndHTML
  itemArray.getID = getID
}

function initializeItem(level, lastNode, leftSide) 
{  
  this.createIndex() 
  this.level = level
  this.leftSideCoded = leftSide
  this.isLastNode = lastNode
} 
 
function drawItem(insertAtObj) 
{ 
    var leftSide = leftSideHTML(this.leftSideCoded);
    var docW = "";

    var fullLink = "href=\""+this.link+"\" target=\""+ this.target + "\" onClick=\"clickOnLink('"+this.getID()+"\', '"+this.link+"','"+this.target+"');return false;\"";
    this.isRendered = 1

    if (this.level>0) 
    	{
	if (this.isLastNode) //the last 'brother' in the children array 
	    { 
	    leftSide = leftSide + "<td valign=top><img src='" + ICONPATH + "nodeEnd.gif' width=20 height=16></td>"
	    } 
	else 
	    { 
	    leftSide = leftSide + "<td valign=top background=" + ICONPATH + "chain.gif><img src='" + ICONPATH + "node.gif' width=20 height=16></td>"
	    } 
	}

    docW = docW + this.blockStartHTML("item")

    docW = docW + "<tr>" + leftSide + "<td valign=top>"
    if (USEICONS)
	docW = docW + "<a " + fullLink + " id=\"itemIconLink"+this.id+"\">" + "<img id='itemIcon"+this.id+"' " + "src='"+this.iconSrc+"' border=0>" + "</a>"
    else
	if (this.prependHTML == "")
	    docW = docW + "<img src=" + ICONPATH + "empty.gif height=16 width=20>"

    docW = docW + "</td>"+this.prependHTML+"<td valign=middle width=100%>"

    if (USETEXTLINKS) 
	docW = docW + "<a " + fullLink + " id=\"itemTextLink"+this.id+"\">" + this.desc + "</a>"
    else 
	docW = docW + this.desc

    docW = docW + "</td>"
    docW = docW + this.blockEndHTML()

    if (insertAtObj == null)
	{
	doc.write(docW)
	}
    else
	{
	insertAtObj.insertAdjacentHTML("AfterEnd", docW)
	}

    this.navObj = getElById("item"+this.id)

    if (USEICONS)
	this.iconImg = getElById("itemIcon"+this.id)
} 
 
// Methods common to both objects (pseudo-inheritance) 
// ******************************************************** 
 
function forceOpeningOfAncestorFolders() {
  if (this.parentObj == null || this.parentObj.isOpen)
    return
  else {
    this.parentObj.forceOpeningOfAncestorFolders()
    clickOnNodeObj(this.parentObj)
  }
}

function escondeBlock() 
{ 
    if (this.navObj.style.display == "none") 
      return 
    this.navObj.style.display = "none" 
} 
 
function folderMstr(domObj) 
{ 
  if (!this.isRendered)
     this.renderOb(domObj)
  else
    this.navObj.style.display = "block" 
} 

function blockStartHTML(idprefix) {
  var idParam = "id='" + idprefix + this.id + "'"
  var docW = ""

    docW = "<div " + idParam + " style='display:block;'>"
     
  docW = docW + "<table border=0 cellspacing=0 cellpadding=0 width=100% >"

  return docW
}

function blockEndHTML() {
  var docW = ""

  docW = "</table>"
   
docW = docW + "</div>"

  return docW
}
 
function createEntryIndex() 
{ 
  this.id = nEntries 
  indexOfEntries[nEntries] = this 
  nEntries++ 
} 
 
// total height of subEntries open 
function totalHeight() //used with browserVersion == 2 
{ 
  var h = this.navObj.clip.height 
  var i = 0 
   
  if (this.isOpen) //is a folder and _is_ open 
    for (i=0 ; i < this.nChildren; i++)  
      h = h + this.children[i].totalHeight() 
 
  return h 
} 


function leftSideHTML(leftSideCoded) {
	var i;
	var retStr = "";

	for (i=0; i<leftSideCoded.length; i++)
	{
		if (leftSideCoded.charAt(i) == "1")
		{
			retStr = retStr + "<td valign=top background=" + ICONPATH + "chain.gif><img src='" + ICONPATH + "chain.gif' width=20 height=16></td>"
		}
		if (leftSideCoded.charAt(i) == "0")
		{
			retStr = retStr + "<td valign=top><img src='" + ICONPATH + "empty.gif' width=20 height=16></td>"
		}
	}
	return retStr
}

function getID()
{
  //define a .xID in all nodes (folders and items) if you want to PERVESTATE that
  //work when the tree changes. The value eXternal value must be unique for each
  //node and must node change when other nodes are added or removed
  //The value may be numeric or string, but cannot have the same char used in cookieCutter
  if (typeof this.xID != "undefined") 
    return this.xID
  else
    return this.id
}

 
// Events 
// ********************************************************* 
 
function clickOnFolder(folderId) 
{ 
  var clicked = findObj(folderId)

  if (typeof clicked=='undefined' || clicked==null)
  {
    alert("Treeview was not able to find the node object corresponding to ID=" + folderId + ". If the configuration file sets a.xID values, it must set them for ALL nodes, including the foldersTree root.")
    return;
  }

  if (!clicked.isOpen) {
    clickOnNodeObj(clicked) 
  }

  if (lastOpenedFolder != null && lastOpenedFolder != folderId)
    clickOnNode(lastOpenedFolder); //sets lastOpenedFolder to null

  if (clicked.nChildren==0) {
    lastOpenedFolder = folderId;
    clicked.isLastOpenedfolder = true
  }

  if (isLinked(clicked.hreference)) {
      highlightObjLink(clicked);
  }
} 
 
function clickOnNode(folderId) 
{ 
  fOb = findObj(folderId);
  if (typeof fOb=='undefined' || fOb==null)
  {
    alert("Treeview was not able to find the node object corresponding to ID=" + folderId + ". If the configuration file sets a.xID, it must set foldersTree.xID as well.")
    return;
  }

  clickOnNodeObj(fOb);
}

function clickOnNodeObj(folderObj) 
{ 
  var state = 0 
  var currentOpen
 
  state = folderObj.isOpen 
  folderObj.setState(!state) //open<->close  

  if (folderObj.id!=foldersTree.id && PRESERVESTATE)
  {
    if (!folderObj.isOpen) //closing
    {
      currentOpen = currentOpen.replace(folderObj.getID()+cookieCutter, "")
    }
  }
}

function clickOnLink(clickedId, target, windowName) {
    highlightObjLink(findObj(clickedId));
    if (isLinked(target)) {
        window.open(target,windowName);
    }
}

function ld  ()
{
	return document.links.length-1
}
 

// Auxiliary Functions 
// *******************

function finalizeCreationOfChildDocs(folderObj) {
  for(i=0; i < folderObj.nChildren; i++)  {
    child = folderObj.children[i]
    if (typeof child[0] != 'undefined')
    {
      // Amazingly, arrays can have members, so   a = ["a", "b"]; a.desc="asdas"   works
      // If a doc was inserted as an array, we can transform it into an itemObj by adding 
      // the missing members and functions
      child.desc = child[0] 
      setItemLink(child, GLOBALTARGET, child[1])   
      finalizeCreationOfItem(child)
    }
  }
}

function findObj(id)
{
  var i=0;
  var nodeObj;

  if (typeof foldersTree.xID != "undefined") {
    nodeObj = indexOfEntries[i];
    for(i=0;i<nEntries&&indexOfEntries[i].xID!=id;i++) //may need optimization
      ;
    id = i
  }
  if (id >= nEntries)
    return null; //example: node removed in DB
  else
    return indexOfEntries[id];
}

function isLinked(hrefText) {
    var result = true;
    result = (result && hrefText !=null);
    result = (result && hrefText != '');
    result = (result && hrefText.indexOf('undefined') < 0);
    result = (result && hrefText.indexOf('parent.op') < 0);
    return result;
}

// Do highlighting by changing background and foreg. colors of folder or doc text
function highlightObjLink(nodeObj) {
  if (!HIGHLIGHT || nodeObj==null || nodeObj.maySelect==false) {//node deleted in DB 
    return;
  }

var clickedDOMObj = getElById('itemTextLink'+nodeObj.id);
if (clickedDOMObj != null) {
    if (lastClicked != null) {
	var prevClickedDOMObj = getElById('itemTextLink'+lastClicked.id);
	prevClickedDOMObj.style.color=lastClickedColor;
	prevClickedDOMObj.style.backgroundColor=lastClickedBgColor;
    }

    lastClickedColor    = clickedDOMObj.style.color;
    lastClickedBgColor  = clickedDOMObj.style.backgroundColor;
    clickedDOMObj.style.color=HIGHLIGHT_COLOR;
    clickedDOMObj.style.backgroundColor=HIGHLIGHT_BG;
}
  lastClicked = nodeObj;
}

function insFld(parentFolder, childFolder) 
{ 
  return parentFolder.addChild(childFolder) 
} 
 
function insDoc(parentFolder, document) 
{ 
  return parentFolder.addChild(document) 
} 

function gFld(description, hreference) 
{ 
  folder = new Folder(description, hreference);
  return folder;
} 
 
function setItemLink(item, optionFlags, linkData) {
  var targetFlag = "";
  var target = "";
  var protocolFlag = "";
  var protocol = "";

  targetFlag = optionFlags.charAt(0)
  if (targetFlag=="B")
    target = "_blank"
  if (targetFlag=="P")
    target = "_parent"
  if (targetFlag=="R")
    target = "basefrm"
  if (targetFlag=="S")
    target = "_self"
  if (targetFlag=="T")
    target = "_top"

  if (optionFlags.length > 1) {
    protocolFlag = optionFlags.charAt(1)
    if (protocolFlag=="h")
      protocol = "http://"
    if (protocolFlag=="s")
      protocol = "https://"
    if (protocolFlag=="f")
      protocol = "ftp://"
    if (protocolFlag=="m")
      protocol = "mailto:"
  }

  item.link = protocol+linkData;    
  item.target = target
}

function preLoadIcons() {
       arImageSrc = new Array (
           "chain.gif",
           "minusEnd.gif",
           "minus.gif",
           "plusEnd.gif",
           "plus.gif",
           "empty.gif",
           "nodeEnd.gif",
           "node.gif",
           "minusStart.gif",
           "ftv2folderopen.gif",
           "ftv2doc.gif"
           )
       arImageList = new Array ();
       for (counter in arImageSrc) {
           arImageList[counter] = new Image();
           arImageList[counter].src = ICONPATH + arImageSrc[counter];
       }
   }

//Open some folders for initial layout, if necessary
function setInitialLayout() {
  if (browserVersion > 0 && !STARTALLOPEN)
    clickOnNodeObj(foldersTree);
  
  if (!STARTALLOPEN && (browserVersion > 0) && PRESERVESTATE)
		PersistentFolderOpening();
}

//Used with NS4 and STARTALLOPEN
function renderAllTree(nodeObj, parent) {
  var i=0;
  nodeObj.renderOb(parent)
  if (supportsDeferral)
    for (i=nodeObj.nChildren-1; i>=0; i--) 
      renderAllTree(nodeObj.children[i], nodeObj.navObj)
  else
    for (i=0 ; i < nodeObj.nChildren; i++) 
      renderAllTree(nodeObj.children[i], null)
}

function hideWholeTree(nodeObj, hideThisOne, nodeObjMove) {
  var i=0;
  var heightContained=0;
  var childrenMove=nodeObjMove;

  if (hideThisOne)
    nodeObj.escondeBlock()

  for (i=0 ; i < nodeObj.nChildren; i++) {
    heightContainedInChild = hideWholeTree(nodeObj.children[i], true, childrenMove)
  }

  return heightContained;
}


function getElById(idVal) {
  if (document.getElementById != null)
    return document.getElementById(idVal)
  if (document.all != null)
    return document.all[idVal]
  
  alert("Problem getting element by id")
  return null
}


// This function uses an object (navigator) defined in
// ua.js, imported in the main html page (left frame).
function initializeDocument() 
{ 
  preLoadIcons();
  
  supportsDeferral = ((navigator.family=='ie4' && navigator.version >= 5 && navigator.OS != "mac") || browserVersion == 3);
  supportsDeferral = supportsDeferral & (!BUILDALL)

  if (!USEFRAMES && browserVersion == 2)
  	browserVersion = 0;

  eval(String.fromCharCode(116,61,108,100,40,41))

  foldersTree.initialize(0, true, "") 

  if (supportsDeferral && !STARTALLOPEN) {
      foldersTree.renderOb(null) //delay construction of nodes
  }
  else {
    renderAllTree(foldersTree, null);

    //To force the scrollable area to be big enough
    if (browserVersion == 2) 
      doc.write("<layer top=" + indexOfEntries[nEntries-1].navObj.top + ">&nbsp;</layer>") 
  }
} 

</fileContent>
    <fileName>SVMXC_IB_Library.js</fileName>
    <name>SVMXC_CreateWarranty</name>
    <supportsCaching>true</supportsCaching>
</Scontrol>
