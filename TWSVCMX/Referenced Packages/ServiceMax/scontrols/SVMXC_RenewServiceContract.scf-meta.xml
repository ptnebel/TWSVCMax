<?xml version="1.0" encoding="UTF-8"?>
<Scontrol xmlns="http://soap.sforce.com/2006/04/metadata">
    <contentSource>HTML</contentSource>
    <description>S-control to renew an existing service contract</description>
    <encodingKey>UTF-8</encodingKey>
    <fileContent></fileContent>
    <fileName>SVMXC_Library.js</fileName>
    <name>SVMXC_RenewServiceContract</name>
    <supportsCaching>true</supportsCaching>
</Scontrol>
